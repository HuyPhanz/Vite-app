{"version":3,"sources":["constants/index.js","reducers/index.js","reducers/productReducers.js","reducers/cardReducers.js","reducers/userReducers.js","store.js","actions/productActions.js","components/Message.js","components/Product.js","pages/ProductsListPage.js","pages/ProductDetailsPage.js","actions/cardActions.js","components/DeleteCardComponent.js","components/CreateCardComponent.js","actions/userActions.js","components/ChargeCardComponent.js","components/UserAddressComponent.js","pages/CheckoutPage.js","components/SearchBarForProducts.js","components/Navbar.js","components/PaymentStatus.js","pages/LoginPage.js","pages/RegisterPage.js","pages/CardUpdatePage.js","pages/CardDetailsPage.js","pages/AccountPage.js","pages/AccountUpdatePage.js","pages/DeleteUserAccountPage.js","components/CreateAddressComponent.js","pages/AllAddressesOfUserPage.js","pages/AddressUpdatePage.js","components/GetDate.js","components/SearchBarForOrdersPage.js","pages/OrdersListPage.js","pages/ProductCreatePage.js","pages/ProductUpdatePage.js","pages/NotFoundPage.js","App.js","index.js"],"names":["PRODUCTS_LIST_REQUEST","PRODUCTS_LIST_SUCCESS","PRODUCTS_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","CREATE_PRODUCT_REQUEST","CREATE_PRODUCT_SUCCESS","CREATE_PRODUCT_FAIL","CREATE_PRODUCT_RESET","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","UPDATE_PRODUCT_RESET","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","DELETE_PRODUCT_RESET","CHECK_TOKEN_VALID_REQUEST","CHECK_TOKEN_VALID_SUCCESS","CHECK_TOKEN_VALID_FAIL","CARD_CREATE_REQUEST","CARD_CREATE_SUCCESS","CARD_CREATE_FAIL","CARD_CREATE_RESET","CHARGE_CARD_REQUEST","CHARGE_CARD_SUCCESS","CHARGE_CARD_FAIL","CHARGE_CARD_RESET","SAVED_CARDS_LIST_REQUEST","SAVED_CARDS_LIST_SUCCESS","SAVED_CARDS_LIST_FAIL","DELETE_SAVED_CARD_REQUEST","DELETE_SAVED_CARD_SUCCESS","DELETE_SAVED_CARD_FAIL","UPDATE_STRIPE_CARD_REQUEST","UPDATE_STRIPE_CARD_SUCCESS","UPDATE_STRIPE_CARD_FAIL","UPDATE_STRIPE_CARD_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_DETAILS_REQUEST","UPDATE_USER_DETAILS_SUCCESS","UPDATE_USER_DETAILS_FAIL","UPDATE_USER_DETAILS_RESET","DELETE_USER_ACCOUNT_REQUEST","DELETE_USER_ACCOUNT_SUCCESS","DELETE_USER_ACCOUNT_FAIL","DELETE_USER_ACCOUNT_RESET","GET_USER_ALL_ADDRESSES_REQUEST","GET_USER_ALL_ADDRESSES_SUCCESS","GET_USER_ALL_ADDRESSES_FAIL","GET_SINGLE_ADDRESS_REQUEST","GET_SINGLE_ADDRESS_SUCCESS","GET_SINGLE_ADDRESS_FAIL","GET_SINGLE_ADDRESS_RESET","CREATE_USER_ADDRESS_REQUEST","CREATE_USER_ADDRESS_SUCCESS","CREATE_USER_ADDRESS_FAIL","CREATE_USER_ADDRESS_RESET","UPDATE_USER_ADDRESS_REQUEST","UPDATE_USER_ADDRESS_SUCCESS","UPDATE_USER_ADDRESS_FAIL","UPDATE_USER_ADDRESS_RESET","DELETE_USER_ADDRESS_REQUEST","DELETE_USER_ADDRESS_SUCCESS","DELETE_USER_ADDRESS_FAIL","DELETE_USER_ADDRESS_RESET","GET_ALL_ORDERS_REQUEST","GET_ALL_ORDERS_SUCCESS","GET_ALL_ORDERS_FAIL","CHANGE_DELIVERY_STATUS_REQUEST","CHANGE_DELIVERY_STATUS_SUCCESS","CHANGE_DELIVERY_STATUS_FAIL","CHANGE_DELIVERY_STATUS_RESET","allReducers","combineReducers","productsListReducer","state","arguments","length","undefined","products","action","type","_objectSpread","loading","error","payload","productDetailsReducer","product","createProductReducer","success","updateProductReducer","deleteProductReducer","createCardReducer","cardData","chargeCardReducer","savedCardsListReducer","stripeCards","updateStripeCardtReducer","stripeCard","deleteSavedCardReducer","data","userLoginReducer","userInfo","userRegisterReducer","getSingleAddressReducer","address","getAllAddressesOfUserReducer","addresses","createUserAddressReducer","updateUserAddressReducer","deleteUserAddressReducer","getAllOrdersReducer","orders","changeDeliveryStatusReducer","checkTokenValidationReducer","valid","userDetailsReducer","user","userDetailsUpdateReducer","deleteUserAccountReducer","middleware","thunk","initialState","localStorage","getItem","JSON","parse","store","createStore","composeWithDevTools","applyMiddleware","apply","getProductDetails","id","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","dispatch","_yield$axios$get2","wrap","_context2","prev","next","axios","get","concat","sent","t0","message","stop","_x2","Message","_ref","variant","children","_jsx","Alert","Product","Card","className","_jsxs","Body","Link","to","Img","src","image","height","Title","as","name","Text","price","ProductsListPage","searchTerm","useHistory","location","search","useDispatch","useSelector","useEffect","_callee","_yield$axios$get","_context","_x","style","display","Spinner","animation","Row","filter","item","toLowerCase","includes","split","map","idx","Col","sm","md","lg","xl","ProductDetailsPage","history","match","_useState","useState","_useState2","_slicedToArray","show","setShow","handleClose","productDeletionSuccess","params","confirmDelete","_ref4","_callee4","getState","_getState2","config","_yield$axios$delete","_context4","headers","Authorization","token","delete","response","detail","_x5","_x6","alert","push","Modal","onHide","Header","closeButton","color","Footer","Button","onClick","Container","admin","width","description","justifyContent","border","borderColor","padding","stock","createCard","_getState","_yield$axios$post","cardNumber","post","email","expMonth","expYear","cvc","saveCard","savedCardsList","_ref3","_callee3","_getState3","_context3","DeleteCardComponent","userId","deleteCardNumber","runCardDeleteHandler","toggleRunCardDeleteHandler","c_number","card_number","_ref5","_callee5","_getState5","_yield$axios$post4","_context5","_x9","_x10","current_year","Date","getFullYear","CreateCardComponent","addressSelected","_useState3","_useState4","setRunCardDeleteHandler","_useState5","_useState6","differentCard","setDifferentCard","_useState7","_useState8","cardDetails","setCardDetails","_useState9","_useState10","cardDetailsId","setCardDetailsId","_useState11","_useState12","showStripeCard","setShowStripeCard","_useState13","_useState15","_useState16","setEmail","_useState17","_useState18","setCardNumber","_useState19","_useState20","setExpMonth","_useState21","_useState22","setExpYear","_useState23","_useState24","setCvc","_useState25","_useState26","setSaveCard","showCardDetails","float","position","exp_month","exp_year","window","reload","_Fragment","Form","onSubmit","e","preventDefault","Number","Group","Label","Control","autoFocus","pattern","value","onChange","target","placeholder","maxLength","required","defaultValue","Array","from","x","i","hidden","slice","payWithSavedCard","title","logout","removeItem","checkTokenValidation","details","_x3","_x4","userDetails","getAllAddress","_ref7","_callee7","_yield$axios$get3","_context7","_x11","_x12","getSingleAddress","_ref8","_callee8","_getState6","_yield$axios$get4","_context8","_x13","_x14","getAllOrders","_ref12","_callee12","_getState10","_yield$axios$get5","_context12","_x21","_x22","ChargeCardComponent","selectedAddressId","chargeSuccessfull","chargeError","chargingStatus","pathname","card_data","last4","address_detail","house_no","landmark","city","pin_code","_yield$axios$post2","chargeCustomer","disabled","size","role","phone_number","UserAddressComponent","handleAddressId","CheckoutPage","setAddressSelected","setSelectedAddressId","tokenError","cardCreationError","cardCreationLoading","xs","Image","alt","SearchBarForProducts","setSearchTerm","NavBar","Navbar","bg","expand","collapseOnSelect","LinkContainer","Brand","Toggle","Collapse","Nav","NavDropdown","username","Item","PaymentStatus","useLocation","boughtData","renderData","LoginPage","setUsername","password","setPassword","setItem","stringify","login","controlId","RegisterPage","confirmPassword","setConfirmPassword","setMessage","register","CardUpdatePage","setName","addressCity","setAddressCity","addressCountry","setAddressCountry","_useState14","addressState","setAddressState","addressZip","setAddressZip","customerId","setCustomerId","cardId","setCardId","customer_id","card_id","name_on_card","address_city","address_country","address_state","address_zip","_getState4","_yield$axios$post3","_x7","_x8","marginBottom","each","cus_Id","card_Id","c_num","CardDetailsPage","setUserId","setDeleteCardNumber","alignItems","AccountPage","userAccDetails","logoutHandler","AccountUpdatePage","updatedUsername","updatedEmail","userData","_yield$axios$put","put","userUpdateDetails","DeleteUserAccount","myPassword","setMyPassword","_ref6","_callee6","_context6","userAccountDelete","CreateAddressComponent","toggleCreateAddress","phoneNumber","setPhoneNumber","pinCode","setPinCode","houseNumber","setHouseNumber","setLandmark","setCity","setState","addressCreationSuccess","errorCreatingAddress","addressData","_ref9","_callee9","_getState7","_context9","_x15","_x16","createUserAddress","InputGroup","AllAddressesOfUserPage","deleteAddress","setDeleteAddress","createAddress","setCreateAddress","loadingAllAddresses","addressDeletionSuccess","deleteAddressHandler","_ref11","_callee11","_getState9","_context11","_x19","_x20","deleteUserAddress","AddressUpdatePage","errorFetchingAddress","addressUpdateSuccess","updatedAddress","_ref10","_callee10","_getState8","_yield$axios$put2","_context10","_x17","_x18","dateCheck","param","dateValue","monthValue","yearValue","SearchBarForOrdersPage","handleSearchTerm","placeholderValue","OrdersListPage","todays_date","toISOString","currentDateInfo","idOfchangeDeliveryStatus","setIdOfchangeDeliveryStatus","cloneSearchTerm","setCloneSearchTerm","loadingOrders","deliveryStatusChangeSuccess","deliveryStatusChangeSpinner","changeDeliveryStatusHandler","status","changeDeliveryStatus","term","Table","striped","bordered","ordered_item","order","paid_status","paid_at","total_price","is_delivered","delivered_at","ProductCreatePage","setDescription","setPrice","setStock","setImage","productCreationSuccess","productCreationError","form_data","FormData","append","createProduct","step","files","ProductUpdatePage","loadingPageDetails","newImage","setNewImage","productUpdationSuccess","loadingProductUpdations","productUpdationError","scrollTo","top","behavior","productId","updateProduct","defaultChecked","NotFoundPage","App","baseUrl","Router","Switch","Route","path","component","ProductListPage","exact","Login","Register","DeleteUserAccountPage","NotFound","MessengerCustomerChat","pageId","appId","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.44b788fb.chunk.js","sourcesContent":["// products list\nexport const PRODUCTS_LIST_REQUEST = \"PRODUCTS_LIST_REQUEST\" \nexport const PRODUCTS_LIST_SUCCESS = \"PRODUCTS_LIST_SUCCESS\"\nexport const PRODUCTS_LIST_FAIL = \"PRODUCTS_LIST_FAIL\"\n\n// product details\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\" \nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\"\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\"\n\n// create product\nexport const CREATE_PRODUCT_REQUEST = \"CREATE_PRODUCT_REQUEST\" \nexport const CREATE_PRODUCT_SUCCESS = \"CREATE_PRODUCT_SUCCESS\" \nexport const CREATE_PRODUCT_FAIL = \"CREATE_PRODUCT_FAIL\" \nexport const CREATE_PRODUCT_RESET = \"CREATE_PRODUCT_RESET\" \n\n// update product\nexport const UPDATE_PRODUCT_REQUEST = \"UPDATE_PRODUCT_REQUEST\" \nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\" \nexport const UPDATE_PRODUCT_FAIL = \"UPDATE_PRODUCT_FAIL\" \nexport const UPDATE_PRODUCT_RESET = \"UPDATE_PRODUCT_RESET\" \n\n// delete product\nexport const DELETE_PRODUCT_REQUEST = \"DELETE_PRODUCT_REQUEST\" \nexport const DELETE_PRODUCT_SUCCESS = \"DELETE_PRODUCT_SUCCESS\" \nexport const DELETE_PRODUCT_FAIL = \"DELETE_PRODUCT_FAIL\" \nexport const DELETE_PRODUCT_RESET = \"DELETE_PRODUCT_RESET\" \n\n// check token validation\nexport const CHECK_TOKEN_VALID_REQUEST = \"CHECK_TOKEN_VALID_REQUEST\"\nexport const CHECK_TOKEN_VALID_SUCCESS = \"CHECK_TOKEN_VALID_SUCCESS\"\nexport const CHECK_TOKEN_VALID_FAIL = \"CHECK_TOKEN_VALID_FAIL\"\nexport const CHECK_TOKEN_VALID_RESET = \"CHECK_TOKEN_VALID_RESET\"\n\n// create card\nexport const CARD_CREATE_REQUEST = \"CARD_CREATE_REQUEST\" \nexport const CARD_CREATE_SUCCESS = \"CARD_CREATE_SUCCESS\"\nexport const CARD_CREATE_FAIL = \"CARD_CREATE_FAIL\"\nexport const CARD_CREATE_RESET = \"CARD_CREATE_RESET\"\n\n// charge card\nexport const CHARGE_CARD_REQUEST = \"CHARGE_CARD_REQUEST\" \nexport const CHARGE_CARD_SUCCESS = \"CHARGE_CARD_SUCCESS\"\nexport const CHARGE_CARD_FAIL = \"CHARGE_CARD_FAIL\"\nexport const CHARGE_CARD_RESET = \"CHARGE_CARD_RESET\"\n\n// saved cards list\nexport const SAVED_CARDS_LIST_REQUEST = \"SAVED_CARDS_LIST_REQUEST\"\nexport const SAVED_CARDS_LIST_SUCCESS = \"SAVED_CARDS_LIST_SUCCESS\"\nexport const SAVED_CARDS_LIST_FAIL = \"SAVED_CARDS_LIST_FAIL\"\n\n// delete saved card\nexport const DELETE_SAVED_CARD_REQUEST = \"DELETE_SAVED_CARD_REQUEST\"\nexport const DELETE_SAVED_CARD_SUCCESS = \"DELETE_SAVED_CARD_SUCCESS\"\nexport const DELETE_SAVED_CARD_FAIL = \"DELETE_SAVED_CARD_FAIL\"\n\n// update saved card\nexport const UPDATE_STRIPE_CARD_REQUEST = \"UPDATE_STRIPE_CARD_REQUEST\"\nexport const UPDATE_STRIPE_CARD_SUCCESS = \"UPDATE_STRIPE_CARD_SUCCESS\"\nexport const UPDATE_STRIPE_CARD_FAIL = \"UPDATE_STRIPE_CARD_FAIL\"\nexport const UPDATE_STRIPE_CARD_RESET = \"UPDATE_STRIPE_CARD_RESET\"\n\n// user login/logout\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\nexport const USER_LOGOUT = \"USER_LOGOUT\"\n\n// user registration/signup\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\n\n// user info/details\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\"\n\n// user update details\nexport const UPDATE_USER_DETAILS_REQUEST = \"UPDATE_USER_DETAILS_REQUEST\"\nexport const UPDATE_USER_DETAILS_SUCCESS = \"UPDATE_USER_DETAILS_SUCCESS\"\nexport const UPDATE_USER_DETAILS_FAIL = \"UPDATE_USER_DETAILS_FAIL\"\nexport const UPDATE_USER_DETAILS_RESET = \"UPDATE_USER_DETAILS_RESET\"\n\n// delete user account\nexport const DELETE_USER_ACCOUNT_REQUEST = \"DELETE_USER_ACCOUNT_REQUEST\" \nexport const DELETE_USER_ACCOUNT_SUCCESS = \"DELETE_USER_ACCOUNT_SUCCESS\" \nexport const DELETE_USER_ACCOUNT_FAIL = \"DELETE_USER_ACCOUNT_FAIL\" \nexport const DELETE_USER_ACCOUNT_RESET = \"DELETE_USER_ACCOUNT_RESET\" \n\n// user all address\nexport const GET_USER_ALL_ADDRESSES_REQUEST = \"GET_USER_ALL_ADDRESSES_REQUEST\"\nexport const GET_USER_ALL_ADDRESSES_SUCCESS = \"GET_USER_ALL_ADDRESSES_SUCCESS\"\nexport const GET_USER_ALL_ADDRESSES_FAIL = \"GET_USER_ALL_ADDRESSES_FAIL\"\n\n// user single address details\nexport const GET_SINGLE_ADDRESS_REQUEST = \"GET_SINGLE_ADDRESS_REQUEST\"\nexport const GET_SINGLE_ADDRESS_SUCCESS = \"GET_SINGLE_ADDRESS_SUCCESS\"\nexport const GET_SINGLE_ADDRESS_FAIL = \"GET_SINGLE_ADDRESS_FAIL\"\nexport const GET_SINGLE_ADDRESS_RESET = \"GET_SINGLE_ADDRESS_RESET\"\n\n// create address\nexport const CREATE_USER_ADDRESS_REQUEST = \"CREATE_USER_ADDRESS_REQUEST\"\nexport const CREATE_USER_ADDRESS_SUCCESS = \"CREATE_USER_ADDRESS_SUCCESS\"\nexport const CREATE_USER_ADDRESS_FAIL = \"CREATE_USER_ADDRESS_FAIL\"\nexport const CREATE_USER_ADDRESS_RESET = \"CREATE_USER_ADDRESS_RESET\"\n\n// update address\nexport const UPDATE_USER_ADDRESS_REQUEST = \"UPDATE_USER_ADDRESS_REQUEST\"\nexport const UPDATE_USER_ADDRESS_SUCCESS = \"UPDATE_USER_ADDRESS_SUCCESS\"\nexport const UPDATE_USER_ADDRESS_FAIL = \"UPDATE_USER_ADDRESS_FAIL\"\nexport const UPDATE_USER_ADDRESS_RESET = \"UPDATE_USER_ADDRESS_RESET\"\n\n// delete user address\nexport const DELETE_USER_ADDRESS_REQUEST = \"DELETE_USER_ADDRESS_REQUEST\"\nexport const DELETE_USER_ADDRESS_SUCCESS = \"DELETE_USER_ADDRESS_SUCCESS\"\nexport const DELETE_USER_ADDRESS_FAIL = \"DELETE_USER_ADDRESS_FAIL\"\nexport const DELETE_USER_ADDRESS_RESET = \"DELETE_USER_ADDRESS_RESET\"\n\n// all orders list\nexport const GET_ALL_ORDERS_REQUEST = \"GET_ALL_ORDERS_REQUEST\"\nexport const GET_ALL_ORDERS_SUCCESS = \"GET_ALL_ORDERS_SUCCESS\"\nexport const GET_ALL_ORDERS_FAIL = \"GET_ALL_ORDERS_FAIL\"\n\n// change order delivery status\nexport const CHANGE_DELIVERY_STATUS_REQUEST = \"CHANGE_DELIVERY_STATUS_REQUEST\"\nexport const CHANGE_DELIVERY_STATUS_SUCCESS = \"CHANGE_DELIVERY_STATUS_SUCCESS\"\nexport const CHANGE_DELIVERY_STATUS_FAIL = \"CHANGE_DELIVERY_STATUS_FAIL\"\nexport const CHANGE_DELIVERY_STATUS_RESET = \"CHANGE_DELIVERY_STATUS_RESET\"","import { combineReducers } from \"redux\";\nimport {\n    productsListReducer,\n    productDetailsReducer,\n    createProductReducer,\n    updateProductReducer,\n    deleteProductReducer,\n    changeDeliveryStatusReducer,\n} from \"./productReducers\";\n\nimport {\n    createCardReducer,\n    chargeCardReducer,\n    savedCardsListReducer,\n    deleteSavedCardReducer,\n    updateStripeCardtReducer\n} from \"./cardReducers\";\n\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userDetailsUpdateReducer,\n    deleteUserAccountReducer,\n    checkTokenValidationReducer,\n    getSingleAddressReducer,\n    getAllAddressesOfUserReducer,\n    createUserAddressReducer,\n    updateUserAddressReducer,\n    deleteUserAddressReducer,\n    getAllOrdersReducer,\n} from \"./userReducers\";\n\nconst allReducers = combineReducers({\n    productsListReducer,\n    productDetailsReducer,\n    createProductReducer,\n    updateProductReducer,\n    deleteProductReducer,\n    createCardReducer,\n    chargeCardReducer,\n    savedCardsListReducer,\n    updateStripeCardtReducer,\n    deleteSavedCardReducer,\n    userLoginReducer,\n    userRegisterReducer,    \n    getSingleAddressReducer,\n    getAllAddressesOfUserReducer,\n    createUserAddressReducer,\n    updateUserAddressReducer,\n    deleteUserAddressReducer,\n    getAllOrdersReducer,\n    changeDeliveryStatusReducer,\n    checkTokenValidationReducer,\n    userDetailsReducer,\n    userDetailsUpdateReducer,\n    deleteUserAccountReducer,\n})\n\n\nexport default allReducers","import {\n    PRODUCTS_LIST_REQUEST,\n    PRODUCTS_LIST_SUCCESS,\n    PRODUCTS_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    CREATE_PRODUCT_REQUEST,\n    CREATE_PRODUCT_SUCCESS,\n    CREATE_PRODUCT_FAIL,\n    CREATE_PRODUCT_RESET,\n\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_RESET,\n\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    DELETE_PRODUCT_RESET,\n\n    CHANGE_DELIVERY_STATUS_REQUEST,\n    CHANGE_DELIVERY_STATUS_SUCCESS,\n    CHANGE_DELIVERY_STATUS_FAIL,\n    CHANGE_DELIVERY_STATUS_RESET,\n\n\n} from '../constants/index'\n\n\n// products list\nexport const productsListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCTS_LIST_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                products: [],   // always pass the object during the request\n                error: \"\"\n            }\n        case PRODUCTS_LIST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                products: action.payload,\n                error: \"\"\n            }\n        case PRODUCTS_LIST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n\n// product details\nexport const productDetailsReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                product: {},        // always pass the object during the request\n                error: \"\"\n            }\n        case PRODUCT_DETAILS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                product: action.payload,\n                error: \"\"\n            }\n        case PRODUCT_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// create product reducer\nexport const createProductReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case CREATE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                product: {},\n                success: false,\n                error: \"\"\n            }\n        case CREATE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                product: action.payload,\n                error: \"\"\n            }\n        case CREATE_PRODUCT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: action.payload\n            }\n        case CREATE_PRODUCT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// update product reducer\nexport const updateProductReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case UPDATE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                product: {},\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                product: action.payload,\n                error: \"\"\n            }\n        case UPDATE_PRODUCT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: action.payload\n            }\n        case UPDATE_PRODUCT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n\n// delete product reducer\nexport const deleteProductReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DELETE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_PRODUCT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_PRODUCT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// change order delivery status reducer\nexport const changeDeliveryStatusReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CHANGE_DELIVERY_STATUS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case CHANGE_DELIVERY_STATUS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case CHANGE_DELIVERY_STATUS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case CHANGE_DELIVERY_STATUS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}","import {\n    CARD_CREATE_REQUEST,\n    CARD_CREATE_SUCCESS,\n    CARD_CREATE_FAIL,\n    CARD_CREATE_RESET,\n\n    CHARGE_CARD_REQUEST,\n    CHARGE_CARD_SUCCESS,\n    CHARGE_CARD_FAIL,\n    CHARGE_CARD_RESET,\n\n    SAVED_CARDS_LIST_REQUEST,\n    SAVED_CARDS_LIST_SUCCESS,\n    SAVED_CARDS_LIST_FAIL,\n\n    UPDATE_STRIPE_CARD_REQUEST,\n    UPDATE_STRIPE_CARD_SUCCESS,\n    UPDATE_STRIPE_CARD_FAIL,\n    UPDATE_STRIPE_CARD_RESET,\n\n    DELETE_SAVED_CARD_REQUEST,\n    DELETE_SAVED_CARD_SUCCESS,\n    DELETE_SAVED_CARD_FAIL,\n\n} from '../constants/index'\n\n\n// create card reducer\nexport const createCardReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CARD_CREATE_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                cardData: {},\n                success: false,\n                error: \"\"\n            }\n        case CARD_CREATE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                cardData: action.payload,\n                error: \"\"\n            }\n        case CARD_CREATE_FAIL:\n            return {\n                ...state,\n                loading: false,\n                cardData: {},\n                success: false,\n                error: action.payload\n            }\n        case CARD_CREATE_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                cardData: {},\n                error: \"\",\n            }\n        default:\n            return state\n    }\n}\n\n// charge card reducer\nexport const chargeCardReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CHARGE_CARD_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case CHARGE_CARD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case CHARGE_CARD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case CHARGE_CARD_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// saved cards list reducer\nexport const savedCardsListReducer = (state = {stripeCards: []}, action) => {\n    switch (action.type) {\n        case SAVED_CARDS_LIST_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case SAVED_CARDS_LIST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                stripeCards: action.payload,\n                error: \"\"\n            }\n        case SAVED_CARDS_LIST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// update stripe card reducer\nexport const updateStripeCardtReducer = (state = {}, action) => {\n    switch (action.type) {\n        case UPDATE_STRIPE_CARD_REQUEST:\n            return {\n                loading: true,\n                success: false,\n                stripeCard: {},\n                error: \"\",\n            }\n        case UPDATE_STRIPE_CARD_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                stripeCard: action.payload,\n                error: \"\",\n            }\n        case UPDATE_STRIPE_CARD_FAIL:\n            return {\n                loading: false,\n                success: false,\n                stripeCard: {},\n                error: action.payload\n            }\n        case UPDATE_STRIPE_CARD_RESET:\n            return {\n                loading: false,\n                success: false,\n                stripeCard: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n\n// delete saved card reducer\nexport const deleteSavedCardReducer = (state = {data: {}}, action) => {\n    switch (action.type) {\n        case DELETE_SAVED_CARD_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                error: \"\"\n            }\n        case DELETE_SAVED_CARD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                data: action.payload,\n                error: \"\"\n            }\n        case DELETE_SAVED_CARD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n\n    UPDATE_USER_DETAILS_REQUEST,\n    UPDATE_USER_DETAILS_SUCCESS,\n    UPDATE_USER_DETAILS_FAIL,\n    UPDATE_USER_DETAILS_RESET,\n\n    DELETE_USER_ACCOUNT_REQUEST,\n    DELETE_USER_ACCOUNT_SUCCESS,\n    DELETE_USER_ACCOUNT_FAIL,\n    DELETE_USER_ACCOUNT_RESET,\n\n    GET_USER_ALL_ADDRESSES_REQUEST,\n    GET_USER_ALL_ADDRESSES_SUCCESS,\n    GET_USER_ALL_ADDRESSES_FAIL,\n\n    GET_SINGLE_ADDRESS_REQUEST,\n    GET_SINGLE_ADDRESS_SUCCESS,\n    GET_SINGLE_ADDRESS_FAIL,\n    GET_SINGLE_ADDRESS_RESET,\n\n    CREATE_USER_ADDRESS_REQUEST,\n    CREATE_USER_ADDRESS_SUCCESS,\n    CREATE_USER_ADDRESS_FAIL,\n    CREATE_USER_ADDRESS_RESET,\n\n    UPDATE_USER_ADDRESS_REQUEST,\n    UPDATE_USER_ADDRESS_SUCCESS,\n    UPDATE_USER_ADDRESS_FAIL,\n    UPDATE_USER_ADDRESS_RESET,\n\n    DELETE_USER_ADDRESS_REQUEST,\n    DELETE_USER_ADDRESS_SUCCESS,\n    DELETE_USER_ADDRESS_FAIL,\n    DELETE_USER_ADDRESS_RESET,\n\n    CHECK_TOKEN_VALID_REQUEST,\n    CHECK_TOKEN_VALID_SUCCESS,\n    CHECK_TOKEN_VALID_FAIL,\n    CHECK_TOKEN_VALID_RESET,\n\n    GET_ALL_ORDERS_REQUEST,\n    GET_ALL_ORDERS_SUCCESS,\n    GET_ALL_ORDERS_FAIL,\n\n} from '../constants/index'\n\n\n// Login\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case USER_LOGIN_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                userInfo: action.payload\n            }\n        case USER_LOGIN_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n// Register\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case USER_REGISTER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                userInfo: action.payload\n            }\n        case USER_REGISTER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n// user details reducer\nexport const userDetailsReducer = (state = {}, action) => {\n    switch(action.type) {\n        case USER_DETAILS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                user: {},\n                error: \"\"\n            }\n        case USER_DETAILS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                user: action.payload,\n                error: \"\"\n            }\n        case USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                user: {},\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// user details update reducer\nexport const userDetailsUpdateReducer = (state = {}, action) => {\n    switch(action.type) {\n        case UPDATE_USER_DETAILS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                user: {},\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_USER_DETAILS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                user: action.payload,\n                error: \"\"\n            }\n        case UPDATE_USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                user: {},\n                error: action.payload\n            }\n        case UPDATE_USER_DETAILS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                user: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// delete user account reducer\nexport const deleteUserAccountReducer = (state = {}, action) => {\n    switch(action.type) {\n        case DELETE_USER_ACCOUNT_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_USER_ACCOUNT_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_USER_ACCOUNT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_USER_ACCOUNT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// check token validation reducer\nexport const checkTokenValidationReducer = (state = {}, action) => {\n    switch(action.type) {\n        case CHECK_TOKEN_VALID_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                valid: false,\n                error: \"\"\n            }\n        case CHECK_TOKEN_VALID_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                valid: true,\n                error: \"\"\n            }\n        case CHECK_TOKEN_VALID_FAIL:\n            return {\n                ...state,\n                loading: false,\n                valid: false,\n                error: action.payload\n            }\n        case CHECK_TOKEN_VALID_RESET:\n            return {\n                ...state,\n                loading: false,\n                valid: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n\n\n// get all addresses of user reducer\nexport const getAllAddressesOfUserReducer = (state = {}, action) => {\n    switch(action.type) {\n        case GET_USER_ALL_ADDRESSES_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                addresses: [],\n                success: false,\n                error: \"\"\n            }\n        case GET_USER_ALL_ADDRESSES_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                addresses: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case GET_USER_ALL_ADDRESSES_FAIL:\n            return {\n                ...state,\n                loading: false,\n                addresses: [],\n                success: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// get single address reducer\nexport const getSingleAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case GET_SINGLE_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        case GET_SINGLE_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                address: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case GET_SINGLE_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                address: {},\n                success: false,\n                error: action.payload\n            }\n        case GET_SINGLE_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// create user address\nexport const createUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case CREATE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        case CREATE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                address: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case CREATE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                address: {},\n                error: action.payload\n            }\n        case CREATE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                address: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// update user address\nexport const updateUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case UPDATE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case UPDATE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case UPDATE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// delete user address reducer\nexport const deleteUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case DELETE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// get all orders reducer\nexport const getAllOrdersReducer = (state = {orders: []}, action) => {\n    switch(action.type) {\n        case GET_ALL_ORDERS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                orders: [],\n                error: \"\"\n            }\n        case GET_ALL_ORDERS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                orders: action.payload,\n                error: \"\"\n            }\n        case GET_ALL_ORDERS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                orders: [],\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n","import {createStore, applyMiddleware} from 'redux'\nimport { composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport allReducers from './reducers/index'\n\nconst middleware = [thunk]\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nlet initialState = {\n    userLoginReducer: { userInfo: userInfoFromStorage }\n}\n\nconst store = createStore(allReducers, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import {\n    PRODUCTS_LIST_REQUEST,\n    PRODUCTS_LIST_SUCCESS,\n    PRODUCTS_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    CREATE_PRODUCT_REQUEST,\n    CREATE_PRODUCT_SUCCESS,\n    CREATE_PRODUCT_FAIL,\n\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n\n    CHANGE_DELIVERY_STATUS_REQUEST,\n    CHANGE_DELIVERY_STATUS_SUCCESS,\n    CHANGE_DELIVERY_STATUS_FAIL,\n\n} from '../constants/index'\n\nimport axios from 'axios'\n\n\n// products list\nexport const getProductsList = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: PRODUCTS_LIST_REQUEST\n        })\n\n        // call api\n        const { data } = await axios.get(\"http://127.0.0.1:8000/api/products/\")\n\n        dispatch({\n            type: PRODUCTS_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCTS_LIST_FAIL,\n            payload: error.message\n        })\n    }\n}\n\n\n// product details\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: PRODUCT_DETAILS_REQUEST\n        })\n\n        // call api\n        const { data } = await axios.get(`http://127.0.0.1:8000/api/product/${id}/`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.message\n        })\n    }\n}\n\n\n// create product\nexport const createProduct = (product) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: CREATE_PRODUCT_REQUEST\n        })\n\n        // login reducer\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"http://127.0.0.1:8000/api/product-create/\",\n            product,\n            config\n        )\n\n        dispatch({\n            type: CREATE_PRODUCT_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: CREATE_PRODUCT_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// delete product\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: DELETE_PRODUCT_REQUEST\n        })\n\n        // login reducer\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.delete(\n            `http://127.0.0.1:8000/api/product-delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// update product\nexport const updateProduct = (id, product) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: UPDATE_PRODUCT_REQUEST\n        })\n\n        // login reducer\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.put(\n            `http://127.0.0.1:8000/api/product-update/${id}/`,\n            product,\n            config\n        )\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// change ordered product delivery status\nexport const changeDeliveryStatus = (id, product) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_REQUEST\n        })\n\n        // login reducer\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.put(\n            `http://127.0.0.1:8000/account/change-order-status/${id}/`,\n            product,\n            config\n        )\n\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport React from 'react'\n\nfunction Product({ product }) {\n    return (\n        <div>\n            <Card className=\"mb-4 rounded\">\n\n                <Card.Body>\n                <Link to={`/product/${product.id}`}>\n                    <Card.Img variant=\"top\" src={product.image} height=\"162\" />\n                </Link>\n                    <Link to={`/product/${product.id}`}>\n                        <Card.Title as=\"div\">\n                            <strong>{product.name}</strong>\n                        </Card.Title>\n                    </Link>\n\n                    <Card.Text as=\"h3\">\n                        ₹ {product.price}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default Product\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductsList } from '../actions/productActions'\nimport Message from '../components/Message'\nimport { Spinner, Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport { useHistory } from \"react-router-dom\";\nimport { CREATE_PRODUCT_RESET } from '../constants'\n\n\nfunction ProductsListPage() {\n\n    let history = useHistory()\n    let searchTerm = history.location.search\n    const dispatch = useDispatch()\n\n    // products list reducer\n    const productsListReducer = useSelector(state => state.productsListReducer)\n    const { loading, error, products } = productsListReducer\n\n    useEffect(() => {\n        dispatch(getProductsList())\n        dispatch({\n            type: CREATE_PRODUCT_RESET\n        })\n        //dispatch(checkTokenValidation())\n    }, [dispatch])\n\n    const showNothingMessage = () => {\n        return (\n            <div>\n                {!loading ? <Message variant='info'>Nothing to show</Message> : \"\"}                \n            </div>\n        )\n    }\n\n    return (\n        <div>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <span style={{ display: \"flex\" }}>\n                <h5>Getting Products</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n            <div>\n                <Row>\n\n                    {/* If length of the filter result is equal to 0 then show 'nothing found' message\n                        with help of showNothingMessage function else show the filtered result on the\n                        webpage and then run the map function */}\n\n                    {(products.filter((item) =>\n                        item.name.toLowerCase().includes(searchTerm !== \"\" ? searchTerm.split(\"=\")[1] : \"\")\n                    )).length === 0 ? showNothingMessage() : (products.filter((item) =>\n                        item.name.toLowerCase().includes(searchTerm !== \"\" ? searchTerm.split(\"=\")[1] : \"\")\n                    )).map((product, idx) => (\n                        <Col key={product.id} sm={12} md={6} lg={4} xl={3}>\n                            <div className=\"mx-2\"> \n                                <Product product={product} />\n                            </div>\n                        </Col>\n                    )\n                    )}\n                </Row>\n            </div>\n        </div>\n    )\n}\n\nexport default ProductsListPage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteProduct, getProductDetails } from '../actions/productActions'\nimport Message from '../components/Message'\nimport { Spinner, Row, Col, Container, Card, Button, Modal } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { CREATE_PRODUCT_RESET, DELETE_PRODUCT_RESET, UPDATE_PRODUCT_RESET, CARD_CREATE_RESET } from '../constants'\n\n\nfunction ProductDetailsPage({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    // modal state and functions\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    // product details reducer\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\n    const { loading, error, product } = productDetailsReducer\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // product details reducer\n    const deleteProductReducer = useSelector(state => state.deleteProductReducer)\n    const { success: productDeletionSuccess } = deleteProductReducer\n\n    useEffect(() => {\n        dispatch(getProductDetails(match.params.id))\n        dispatch({\n            type: UPDATE_PRODUCT_RESET\n        })\n        dispatch({\n            type: CREATE_PRODUCT_RESET\n        })\n        dispatch({\n            type: CARD_CREATE_RESET\n        })\n    }, [dispatch, match])\n\n    // product delete confirmation\n    const confirmDelete = () => {\n        dispatch(deleteProduct(match.params.id))\n        handleClose()\n    }\n\n    // after product deletion\n    if (productDeletionSuccess) {\n        alert(\"Product successfully deleted.\")\n        history.push(\"/\")\n        dispatch({\n            type: DELETE_PRODUCT_RESET\n        })\n    }\n\n    return (\n        <div>\n\n            {/* Modal Start*/}\n            <div>\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>\n                            <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                            {\" \"}\n                            Delete Confirmation\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Are you sure you want to delete this product <em>\"{product.name}\"</em>?</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={() => confirmDelete()}>\n                            Confirm Delete\n                        </Button>\n                        <Button variant=\"primary\" onClick={handleClose}>\n                            Cancel\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n\n            {/* Modal End */}\n\n            {loading && <span style={{ display: \"flex\" }}>\n                <h5>Getting Product Details</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n            {error ? <Message variant='danger'>{error}</Message>\n                :\n                <div>\n                    <Container>\n                        <Row>\n                            <Col md={6}>\n                                <Card.Img variant=\"top\" src={product.image} height=\"420\" />\n\n                                {/* Product edit and delete conditions */}\n\n                                {userInfo && userInfo.admin ?\n                                    <span style={{ display: \"flex\" }}>\n                                        < button\n                                            className=\"btn mt-2 btn-danger btn-sm button-focus-css\"\n                                            style={{ width: \"100%\" }}\n                                            onClick={() => handleShow()}\n                                        >Delete Product\n                                        </button>\n\n                                        <button\n                                            className=\"ml-2 mt-2 btn btn-primary btn-sm button-focus-css\"\n                                            onClick={() => history.push(`/product-update/${product.id}/`)}\n                                            style={{ width: \"100%\" }}\n                                        >Edit Product\n                                        </button>\n                                    </span>\n                                    : \"\"}\n                            </Col>\n\n                            <Col sm>\n                                <b>{product.name}</b>\n                                <hr />\n                                <span className=\"justify-description-css\">\n                                    <p>{product.description}</p>\n                                </span>\n                                <span style={{\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    border: \"1px solid\",\n                                    borderColor: \"#C6ACE7\",\n                                    padding: \"2px\"\n                                }}>\n                                    Price:<span className=\"text-success ml-2\">₹ {product.price}</span>\n                                </span>\n                            </Col>\n                            <Col sm>\n                                <b>Buy</b>\n                                <hr />\n                                {product.stock ?\n                                    <Link to={`${product.id}/checkout/`}>\n                                        <button className=\"btn btn-primary\">\n                                            <span>Pay with Stripe</span>\n                                        </button>\n                                    </Link>\n                                    :\n                                    <Message variant='danger'>\n                                        Out Of Stock!\n                                    </Message>}\n                            </Col>\n                        </Row>\n\n                    </Container>\n                </div>\n            }\n        </div >\n    )\n}\n\nexport default ProductDetailsPage\n","import {\n    CARD_CREATE_REQUEST,\n    CARD_CREATE_SUCCESS,\n    CARD_CREATE_FAIL,\n\n    CHARGE_CARD_REQUEST,\n    CHARGE_CARD_SUCCESS,\n    CHARGE_CARD_FAIL,\n\n    SAVED_CARDS_LIST_REQUEST,\n    SAVED_CARDS_LIST_SUCCESS,\n    SAVED_CARDS_LIST_FAIL,\n\n    DELETE_SAVED_CARD_REQUEST,\n    DELETE_SAVED_CARD_SUCCESS,\n    DELETE_SAVED_CARD_FAIL,\n\n    UPDATE_STRIPE_CARD_REQUEST,\n    UPDATE_STRIPE_CARD_SUCCESS,\n    UPDATE_STRIPE_CARD_FAIL,\n\n} from '../constants/index'\n\nimport axios from 'axios'\n\n// create card\nexport const createCard = (cardData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: CARD_CREATE_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n                \"Card-Number\": cardData.cardNumber,\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"http://127.0.0.1:8000/payments/create-card/\",\n            {\n                'email': cardData.email,\n                'number': cardData.cardNumber,\n                'exp_month': cardData.expMonth,\n                'exp_year': cardData.expYear,\n                'cvc': cardData.cvc,\n                'save_card': cardData.saveCard\n            },\n            config\n        )\n\n        dispatch({\n            type: CARD_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CARD_CREATE_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// charge customer\nexport const chargeCustomer = (cardData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: CHARGE_CARD_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"http://127.0.0.1:8000/payments/charge-customer/\",\n            cardData,\n            config\n        )\n\n        dispatch({\n            type: CHARGE_CARD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CHARGE_CARD_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// saved cards list\nexport const savedCardsList = () => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: SAVED_CARDS_LIST_REQUEST,\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.get('http://127.0.0.1:8000/account/stripe-cards/', config)\n\n        dispatch({\n            type: SAVED_CARDS_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: SAVED_CARDS_LIST_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// update stripe card\nexport const updateStripeCard = (cardData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: UPDATE_STRIPE_CARD_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"http://127.0.0.1:8000/payments/update-card/\",\n            cardData,\n            config\n        )\n\n        dispatch({\n            type: UPDATE_STRIPE_CARD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_STRIPE_CARD_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n\n// delete saved card\nexport const deleteSavedCard = (card_number) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: DELETE_SAVED_CARD_REQUEST,\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            'http://127.0.0.1:8000/payments/delete-card/',\n            { \"card_number\": card_number },\n            config\n        )\n\n        dispatch({\n            type: DELETE_SAVED_CARD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_SAVED_CARD_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { deleteSavedCard } from '../actions/cardActions'\nimport { useDispatch } from 'react-redux'\nimport { Modal } from 'react-bootstrap'\n\n\nfunction DeleteCardComponent({ userId, deleteCardNumber, runCardDeleteHandler, toggleRunCardDeleteHandler }) {\n\n    const dispatch = useDispatch()\n\n    // card delete confirmation\n    const confirmDelete = (c_number) => {\n        dispatch(deleteSavedCard(c_number))\n        toggleRunCardDeleteHandler()\n    }\n\n    return (\n        <div>\n            {/* Modal Start*/}\n            <div>\n                <Modal show={runCardDeleteHandler} onHide={toggleRunCardDeleteHandler}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>\n                            <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                            {\" \"}\n                            Delete Confirmation\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <p>\n                            <b>\n                                Warning!\n                            </b>\n                            {\" \"}deleting your card will delete your stripe account and all its data.\n                        </p>\n                        Are you sure you want to delete the card \"{deleteCardNumber}\"?\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={() => confirmDelete(deleteCardNumber)}>\n                            Confirm Delete\n                        </Button>\n                        <Button variant=\"primary\" onClick={toggleRunCardDeleteHandler}>\n                            Cancel\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n\n            {/* Modal End */}\n        </div>\n    )\n}\n\nexport default DeleteCardComponent\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\nimport { createCard } from '../actions/cardActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Spinner } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Message from './Message';\nimport DeleteCardComponent from './DeleteCardComponent';\n\n// to manage our exp month and exp year\nlet todays_date = new Date()\nlet current_year = todays_date.getFullYear()\n\n\nconst CreateCardComponent = ({ stripeCards, addressSelected }) => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [userId] = useState(0)\n    const [runCardDeleteHandler, setRunCardDeleteHandler] = useState(false)\n    const [differentCard, setDifferentCard] = useState(false)\n    const [cardDetails, setCardDetails] = useState(false)\n    const [cardDetailsId, setCardDetailsId] = useState(0)\n    const [showStripeCard, setShowStripeCard] = useState(false)\n    const [deleteCardNumber] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [cardNumber, setCardNumber] = useState(\"\")\n    const [expMonth, setExpMonth] = useState(\"\")\n    const [expYear, setExpYear] = useState(\"\")\n    const [cvc, setCvc] = useState(\"\")\n    const [saveCard, setSaveCard] = useState(false)\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // card delete reducer\n    const deleteSavedCardReducer = useSelector(state => state.deleteSavedCardReducer)\n    const { loading, success, error } = deleteSavedCardReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n    }, [history, userInfo, success])\n\n    // stripe card form submission handler\n    const handleCardSubmittion = (e) => {\n        e.preventDefault()\n        if (addressSelected) {\n            const data = {\n                \"email\": email === \"\" ? userInfo.email : email,\n                \"cardNumber\": cardNumber,\n                \"expMonth\": expMonth ? Number(expMonth) : \"\",\n                \"expYear\": expYear ? Number(expYear) : \"\",\n                \"cvc\": cvc ? Number(cvc) : \"\",\n                \"saveCard\": saveCard\n            }\n            dispatch(createCard(data))\n        } else {\n            alert(\"Please select or add your Address to continue\")\n        }\n    }\n\n    // pay with already existing (saved) stripe card handler\n    const payWithSavedCard = (cardData) => {\n        if (addressSelected) {\n            const data = {\n                \"email\": cardData.email,\n                \"cardNumber\": cardData.card_number,\n                \"expMonth\": Number(cardData.exp_month),\n                \"expYear\": Number(cardData.exp_year),\n                \"cvc\": Number(cardData.cvc),\n                \"saveCard\": false\n            }\n            dispatch(createCard(data))\n        } else {\n            alert(\"Please select or add your Address to continue\")\n        }\n    }\n\n    // show card details\n    const showCardDetails = (cardData) => {\n        if (cardDetails) {\n            if (cardData.id === cardDetailsId) {\n                return (\n                    <div>\n                        <button\n                            onClick={() => setCardDetails(false)}\n                            className=\"btn btn-outline-danger btn-sm button-focus-css\"\n                            style={{ float: \"right\", position: \"relative\", \"top\": \"-40px\" }}>\n                            close\n                        </button>\n                        <p><b>Exp Month:</b> {cardData.exp_month}</p>\n                        <p><b>Exp Year:</b> {cardData.exp_year}</p>                       \n                    </div>\n                )\n            }\n        }\n    }\n\n    const toggleRunCardDeleteHandler = () => {\n        setRunCardDeleteHandler(!runCardDeleteHandler)\n    }\n\n    // reload the webpage after new card deletion\n    if (success) {\n        alert(\"Card successfully deleted.\")\n        window.location.reload()\n\n    }\n\n    return (\n        <div>\n\n            {/* Working on Modal Start*/}\n            <div>\n                <>\n                    <DeleteCardComponent\n                        userId={userId}\n                        deleteCardNumber={deleteCardNumber}\n                        runCardDeleteHandler={runCardDeleteHandler}\n                        toggleRunCardDeleteHandler={toggleRunCardDeleteHandler}\n                    />\n                </>\n            </div>\n\n            {/* Working on Modal End */}\n\n            {loading\n                &&\n                <span style={{ display: \"flex\" }}>\n                    <h5>Deleting card</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span>}\n            {error && <Message variant='danger'>{error}</Message>}\n            <div className=\"card px-4 py-4\">\n                <button className={showStripeCard\n                    ? \"btn btn-sm btn-danger mb-3 button-focus-css\"\n                    : \"btn btn-sm btn-primary mb-3 button-focus-css\"}\n                    onClick={() =>\n                        setShowStripeCard(!showStripeCard)\n                    }>\n                    {showStripeCard\n                        ? \"close\"\n                        : \"Enter stripe card\"}\n                </button>\n\n                {showStripeCard ?\n                    <Form onSubmit={handleCardSubmittion}>\n\n                        {differentCard ?\n                            <Form.Group>\n                                <Form.Label><b>Card Holder Email Address</b></Form.Label>\n                                <Form.Control\n                                    autoFocus={true}\n                                    type=\"email\"\n                                    pattern=\".+@gmail\\.com\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                    placeholder=\"Email address linked with the Card\" />\n                            </Form.Group>\n                            :\n                            <span><b>Default Customer Email: </b>{userInfo.email}</span>\n                        }\n                        <p>\n                            <Link to=\"#\" onClick={() => {\n                                setDifferentCard(!differentCard)\n                                setEmail(\"\")\n                            }}>\n                                {differentCard ? \"Use Your default Email\" : \"Use a different Card\"}\n                            </Link>\n                        </p>\n\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label><b>Card Number</b></Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                pattern=\"[0-9]+\"\n                                value={cardNumber}\n                                onChange={(e) => setCardNumber(e.target.value)}\n                                placeholder=\"Enter Your Card Number\" maxLength=\"16\"\n                                required\n                            />\n                        </Form.Group>\n\n                        <Row>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>Exp Month</b></Form.Label>\n                                    <select\n                                        className=\"form-control\"\n                                        defaultValue={expMonth}\n                                        onChange={e => setExpMonth(e.target.value)}\n                                        required\n                                    >\n                                        <option>-- --</option>\n                                        {Array.from({ length: 12 }, (x, i) => <option\n                                            key={i}\n                                        >\n                                            {i + 1}\n                                        </option>\n                                        )}\n                                    </select>\n                                </Form.Group>\n                            </Col>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>Exp Year</b></Form.Label>\n                                    <select className=\"form-control\"\n                                        defaultValue={expYear}\n                                        onChange={e => setExpYear(e.target.value)}\n                                        required\n                                    >\n                                        <option>-- --</option>\n                                        {Array.from({ length: 21 }, (x, i) => <option\n                                            key={i}\n                                        >{current_year + i}</option>)}\n                                    </select>\n                                </Form.Group>\n                            </Col>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>CVC Number</b></Form.Label>\n                                    <Form.Control\n                                        type=\"numbers\"\n                                        onChange={(e) => setCvc(e.target.value)}\n                                        placeholder=\"123\" \n                                        maxLength=\"3\"\n                                        pattern=\"[0-9]+\"\n                                        required\n                                    />\n                                </Form.Group>\n                            </Col>\n\n                        </Row>\n\n                        <Form.Text className=\"text-muted pb-2\">\n                            <span style={{ display: \"flex\" }}>\n                                <input\n                                    hidden={differentCard}\n                                    type=\"checkbox\"\n                                    className=\"mt-1\"\n                                    value={differentCard ? false : saveCard}\n                                    onChange={() => setSaveCard(!saveCard)}\n                                />\n                                <span hidden={differentCard} className=\"ml-1\">Save my card for future payments</span>\n                            </span>\n                        </Form.Text>\n\n                        <Button className=\"btn-sm button-focus-css\" variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                    : \"\"}\n\n            </div>\n\n            <div className=\"my-4 card px-4 py-4\">\n                <h5>Saved card</h5>\n                {stripeCards.length > 0 ?\n                    stripeCards.map(cardData => (\n                        <div key={cardData.id}>\n                            <Card\n                                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                                className=\"p-2\">\n                                <p><b>Card Number:</b> XXXX XXXX XXXX {cardData.card_number.slice(12,18)}</p>\n                                <div>\n                                    {showCardDetails(cardData)}\n                                    <button onClick={() => {\n                                        setCardDetails(true)\n                                        setCardDetailsId(cardData.id)\n                                    }} className=\"btn btn-sm btn-outline-primary button-focus-css\"\n                                    >\n                                        Show Card Details\n                                    </button>\n                                    <button onClick={() => payWithSavedCard(cardData)}\n                                        className=\"ml-2 btn btn-sm btn-outline-primary button-focus-css\">\n                                        Pay with this Card\n                                    </button>\n                                </div>\n                            </Card>\n\n                            {/* Edit Card Buttton */}\n\n                            <span\n                                onClick={() => history.push(\"/stripe-card-details/\")}>\n                                <i\n                                    title=\"edit card\"\n                                    className=\"fas fa-edit fa-lg edit-button-css mr-2\"\n                                ></i>\n                            </span>\n                        </div>\n                    )) : \"No saved card.\"}\n            </div>\n        </div>\n    )\n}\n\nexport default CreateCardComponent\n","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n\n    CARD_CREATE_RESET,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n\n    UPDATE_USER_DETAILS_REQUEST,\n    UPDATE_USER_DETAILS_SUCCESS,\n    UPDATE_USER_DETAILS_FAIL,\n\n    DELETE_USER_ACCOUNT_REQUEST,\n    DELETE_USER_ACCOUNT_SUCCESS,\n    DELETE_USER_ACCOUNT_FAIL,\n\n    GET_USER_ALL_ADDRESSES_REQUEST,\n    GET_USER_ALL_ADDRESSES_SUCCESS,\n    GET_USER_ALL_ADDRESSES_FAIL,\n\n    GET_SINGLE_ADDRESS_REQUEST,\n    GET_SINGLE_ADDRESS_SUCCESS,\n    GET_SINGLE_ADDRESS_FAIL,\n\n    CREATE_USER_ADDRESS_REQUEST,\n    CREATE_USER_ADDRESS_SUCCESS,\n    CREATE_USER_ADDRESS_FAIL,\n\n    UPDATE_USER_ADDRESS_REQUEST,\n    UPDATE_USER_ADDRESS_SUCCESS,\n    UPDATE_USER_ADDRESS_FAIL,\n\n    DELETE_USER_ADDRESS_REQUEST,\n    DELETE_USER_ADDRESS_SUCCESS,\n    DELETE_USER_ADDRESS_FAIL,\n\n    CHECK_TOKEN_VALID_REQUEST,\n    CHECK_TOKEN_VALID_SUCCESS,\n    CHECK_TOKEN_VALID_FAIL,\n\n    GET_ALL_ORDERS_REQUEST,\n    GET_ALL_ORDERS_SUCCESS,\n    GET_ALL_ORDERS_FAIL,\n\n} from '../constants/index'\n\nimport axios from 'axios'\n\n// Login\nexport const login = (username, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            'http://127.0.0.1:8000/account/login/',\n            { 'username': username, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data)) // will create a new key-value pair in localStorage\n        // also see store.js file\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// Logout\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({\n        type: USER_LOGOUT\n    })\n    dispatch({\n        type: CARD_CREATE_RESET\n    })\n}\n\n// register\nexport const register = (username, email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_REGISTER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`http://127.0.0.1:8000/account/register/`,\n            { 'username': username, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    }\n    catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// check token validation\nexport const checkTokenValidation = () => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: CHECK_TOKEN_VALID_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\"http://127.0.0.1:8000/payments/check-token/\", config)\n\n        dispatch({\n            type: CHECK_TOKEN_VALID_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CHECK_TOKEN_VALID_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n\n// user details\nexport const userDetails = (id) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(`http://127.0.0.1:8000/account/user/${id}`, config)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n// user update details\nexport const userUpdateDetails = (userData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: UPDATE_USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.put(\n            `http://127.0.0.1:8000/account/user_update/${userInfo.id}/`,\n            {\n                \"username\": userData.username,\n                \"email\": userData.email,\n                \"password\": userData.password\n            },\n            config\n        )\n\n        dispatch({\n            type: UPDATE_USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// user account delete\nexport const userAccountDelete = (userData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: DELETE_USER_ACCOUNT_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.post(\n            `http://127.0.0.1:8000/account/user_delete/${userData.id}/`,\n            {\n                \"password\": userData.password\n            },\n            config\n        )\n\n        dispatch({\n            type: DELETE_USER_ACCOUNT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_ACCOUNT_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// get user address\nexport const getAllAddress = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_USER_ALL_ADDRESSES_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\n            \"http://127.0.0.1:8000/account/all-address-details/\",\n            config\n        )\n\n        dispatch({\n            type: GET_USER_ALL_ADDRESSES_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_USER_ALL_ADDRESSES_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// get user single address\nexport const getSingleAddress = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_SINGLE_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\n            `http://127.0.0.1:8000/account/address-details/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: GET_SINGLE_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_SINGLE_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// create user address\nexport const createUserAddress = (addressData) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: CREATE_USER_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.post(\n            \"http://127.0.0.1:8000/account/create-address/\",\n            addressData,\n            config\n        )\n\n        dispatch({\n            type: CREATE_USER_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_USER_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// update user address\nexport const updateUserAddress = (id, addressData) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: UPDATE_USER_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.put(\n            `http://127.0.0.1:8000/account/update-address/${id}/`,\n            addressData,\n            config\n        )\n\n        dispatch({\n            type: UPDATE_USER_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// delete user address\nexport const deleteUserAddress = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: DELETE_USER_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.delete(\n            `http://127.0.0.1:8000/account/delete-address/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: DELETE_USER_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n// get all orders\nexport const getAllOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_ALL_ORDERS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\n            `http://127.0.0.1:8000/account/all-orders-list/`,\n            config\n        )\n\n        dispatch({\n            type: GET_ALL_ORDERS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_ALL_ORDERS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Spinner, Form, Button, Card } from 'react-bootstrap'\nimport { chargeCustomer } from '../actions/cardActions'\nimport { Link, useHistory } from \"react-router-dom\";\nimport { getSingleAddress } from '../actions/userActions'\nimport Message from './Message'\n\n\nconst ChargeCardComponent = ({ product, match, selectedAddressId, addressSelected }) => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    // create card reducer\n    const createCardReducer = useSelector(state => state.createCardReducer)\n    const { cardData } = createCardReducer\n\n    // charge card reducer\n    const chargeCardReducer = useSelector(state => state.chargeCardReducer)\n    const { success: chargeSuccessfull, error: chargeError, loading: chargingStatus } = chargeCardReducer\n\n    // get single address reducer    \n    const getSingleAddressReducer = useSelector(state => state.getSingleAddressReducer)\n    const { address } = getSingleAddressReducer\n\n    useEffect(() => {\n        dispatch(getSingleAddress(selectedAddressId))\n    }, [dispatch, match, selectedAddressId])\n\n    // charge card handler\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const address_detail = `${address.house_no}, near ${address.landmark}, ${address.city}, \n        ${address.state}, ${address.pin_code}`\n        const data = {\n            \"email\": cardData.email,\n            \"source\": cardData.id,\n            \"amount\": product.price,\n            \"name\": address.name,\n            \"card_number\": cardData.card_data.last4,\n            \"address\": address_detail,\n            \"ordered_item\": product.name,\n            \"paid_status\": true,\n            \"total_price\": product.price,\n            \"is_delivered\": false,\n            \"delivered_at\": \"Not Delivered\",\n        }\n        dispatch(chargeCustomer(data))\n    }\n\n    if (chargeSuccessfull) {\n        history.push({\n            pathname: '/payment-status/',\n            state: { detail: product }\n        })\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            {chargeError ? <Message variant=\"danger\">{chargeError}</Message> : \"\"}\n            <span className=\"text-info\">\n                <h5>Confirm payment</h5>\n            </span>\n            <div className=\"mb-2\">\n                Using Card: XXXX XXXX XXXX {cardData.card_data.last4}\n            </div>\n            <Form onSubmit={onSubmit}>\n\n                {chargingStatus ?\n                    <Button variant=\"primary\" disabled style={{ width: \"100%\" }}>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"grow\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                        {\" \"}Processing Payment...\n                    </Button>\n                    :\n                    <Button variant=\"primary\" type=\"submit\" style={{ width: \"100%\" }}>\n                        Pay ₹{product.price}\n                    </Button>\n                }\n            </Form>\n\n            <Card\n                className=\"p-2 mt-2 mb-2\"\n                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n            >\n                {address ?\n                    <div>\n                        <span className=\"text-info\">\n                            <b><em>Will be delievered at this address</em></b>\n                        </span>\n                        <p></p>\n                        <p><b>Name: </b>{address ? address.name : \"\"}</p>\n                        <p><b>Phone Number: </b>{address ? address.phone_number : \"\"}</p>\n                        <p><b>House Number: </b>{address ? address.house_no : \"\"}</p>\n                        <p><b>Landmark: </b>{address ? address.landmark : \"\"}</p>\n                        <p><b>City: </b>{address ? address.city : \"\"}</p>\n                        <p><b>State: </b>{address ? address.state : \"\"}</p>\n                        <p><b>Pin Code/Zip Code: </b>{address ? address.pin_code : \"\"}</p>\n                    </div>\n                    :\n                    \"\"\n                }\n            </Card>\n            <Link to=\"#\" onClick={() => window.location.reload()}>Select a different card to pay</Link>\n\n        </div >\n    )\n}\n\nexport default ChargeCardComponent\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Card } from 'react-bootstrap'\nimport { getAllAddress } from '../actions/userActions'\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction UserAddressComponent({ handleAddressId }) {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const updatehandleAddressId = (id) => {\n        handleAddressId(id)\n    }\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get address list reducer\n    const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer)\n    const { addresses } = getAllAddressesOfUserReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(getAllAddress())\n        }\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            {addresses ? addresses.map((address, idx) => (\n                <div key={idx}>\n                    <Card\n                        className=\"p-2 mb-2\"\n                        style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                        key={address.id}\n\n                    >\n                        <input\n                            type=\"radio\"\n                            name=\"addressId\"\n                            value={0}\n                            onClick={() => updatehandleAddressId(address.id)}\n                        />                        \n                        <span><b>Name: </b>{address.name}</span>\n                        <span><b>Address: </b>\n                        {address.house_no}, {address.landmark}, {address.city}, \n                        {address.state}, {address.pin_code}</span>\n                    </Card>\n                </div>\n            ))\n                :\n                \"empty\"\n            }\n\n        </div >\n    )\n}\n\nexport default UserAddressComponent\n","import React, { useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Row, Col, Container, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductDetails } from '../actions/productActions'\nimport CreateCardComponent from '../components/CreateCardComponent'\nimport ChargeCardComponent from '../components/ChargeCardComponent'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport { savedCardsList } from '../actions/cardActions'\nimport UserAddressComponent from '../components/UserAddressComponent'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport {CHARGE_CARD_RESET} from '../constants/index'\n\nconst CheckoutPage = ({ match }) => {\n\n    let history = useHistory()\n\n    const dispatch = useDispatch()\n    const [addressSelected, setAddressSelected] = useState(false)\n    const [selectedAddressId, setSelectedAddressId] = useState(0)\n\n    // set address id handler\n    const handleAddressId = (id) => {\n        if (id) {\n            setAddressSelected(true)\n        }\n        setSelectedAddressId(id)\n    }\n      \n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // product details reducer\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\n    const { loading, error, product } = productDetailsReducer\n\n    // create card reducer\n    const createCardReducer = useSelector(state => state.createCardReducer)\n    const { error: cardCreationError, success, loading: cardCreationLoading } = createCardReducer\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // saved cards list reducer\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\n    const { stripeCards } = savedCardsListReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getProductDetails(match.params.id))\n            dispatch(savedCardsList())\n            dispatch({\n                type: CHARGE_CARD_RESET\n            })\n        }\n    }, [dispatch, match, history, success, userInfo])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n      }\n\n    return (\n        <div>\n            {cardCreationError ? <Message variant='danger'>{cardCreationError}</Message> : \"\"}\n            {loading\n                &&\n                <span style={{ display: \"flex\" }}>\n                    <h5>Getting Checkout Info</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span>}\n            {!loading && cardCreationLoading ?\n                <span style={{ display: \"flex\" }}>\n                    <h5>Checking your card</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span> : \"\"}\n            {error ? <Message variant='danger'>{error}</Message> :\n                <Container>\n                    <Row>\n                        <Col xs={6}>\n                            <h3>Checkout Summary</h3>\n                            <Card className=\"mb-4\">\n                                <Card.Body>\n                                    <Container>\n                                        <Row>\n                                            <Col>\n                                                <Image src={product.image} alt=\"image\" height=\"180\" />\n                                            </Col>\n                                            <Col>\n                                                <h5 className=\"card-title text-capitalize\">\n                                                    {product.name}\n                                                </h5>\n                                                <span className=\"card-text text-success\">₹ {product.price}</span>\n                                            </Col>\n                                        </Row>\n                                    </Container>\n                                </Card.Body>\n                            </Card>\n\n                            <span style={{ display: \"flex\" }}>\n                                <h3>Billing Address</h3>\n                                <Link\n                                    className=\"ml-2 mt-2\"\n                                    to=\"/all-addresses/\"\n                                >\n                                    Edit/Add Address\n                                </Link>\n                            </span>\n                            <UserAddressComponent handleAddressId={handleAddressId} />\n                        </Col>\n                        <Col xs={6}>\n                            <h3>\n                                Payments Section\n                            </h3>\n                            {success ?\n                                <ChargeCardComponent\n                                    selectedAddressId={selectedAddressId}\n                                    addressSelected={addressSelected}\n                                    product={product}\n                                />\n                                :\n                                <CreateCardComponent\n                                    addressSelected={addressSelected}\n                                    stripeCards={stripeCards} />}\n                        </Col>\n                    </Row>\n                </Container>\n            }\n        </div>\n    )\n}\n\nexport default CheckoutPage","import React, { useState } from 'react'\nimport {useHistory} from 'react-router-dom'\n\n\nfunction SearchBarForProducts() {\n\n    let history = useHistory()\n    const [searchTerm, setSearchTerm] = useState(\"\")\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if(searchTerm) {\n            history.push(`/?searchTerm=${searchTerm}`)\n        }\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <span\n                    style={{ display: \"flex\" }}\n                    className=\"\"\n                >\n                    <input\n                        type=\"text\"\n                        value={searchTerm}\n                        placeholder=\"search products\"\n                        className=\"form-control\"\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary ml-2 button-focus-css\"\n                    ><i className=\"fas fa-search\"></i>\n                    </button>\n                </span>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBarForProducts\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions'\nimport { useHistory } from \"react-router-dom\";\nimport SearchBarForProducts from './SearchBarForProducts'\n\n\nfunction NavBar() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // logout\n    const logoutHandler = () => {\n        dispatch(logout()) // action\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand><i className=\"mb-2 fas fa-home\"> Home</i></Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n\n                            {/* All Products */}\n                            <LinkContainer to=\"/\">\n                                <Nav.Link >All Products</Nav.Link>\n                            </LinkContainer>\n\n                            {/* New Product (Admins Only) */}\n\n                            {userInfo && userInfo.admin ?\n                                <LinkContainer to=\"/new-product/\">\n                                    <Nav.Link >Add Product</Nav.Link>\n                                </LinkContainer>\n                                : \"\"\n                            }\n\n                                <span className=\"\">\n                                    <SearchBarForProducts />\n                                </span>\n\n                        </Nav>\n\n                        {/* login-logout condition here */}\n\n                        {userInfo ?\n                            <div>\n                                <NavDropdown className=\"navbar-nav text-capitalize\" title={userInfo.username} id='username'>\n                                    <LinkContainer to=\"/account\">\n                                        <NavDropdown.Item>Account Settings</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to=\"/all-addresses/\">\n                                        <NavDropdown.Item>Address Settings</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to=\"/stripe-card-details/\">\n                                        <NavDropdown.Item>Card Settings</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to=\"/all-orders/\">\n                                        <NavDropdown.Item>All Orders</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>\n                                        Logout\n                                    </NavDropdown.Item>\n                                </NavDropdown>\n                            </div>\n                            :\n\n                            <LinkContainer to=\"/login\">\n                                <Nav.Link><i className=\"fas fa-user\"></i> Login</Nav.Link>\n                            </LinkContainer>\n                        }\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default NavBar\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from 'react-router-dom'\nimport Message from \"./Message\"\n\nconst PaymentStatus = () => {\n    const location = useLocation()\n\n    const renderData = () => {\n\n        try {\n            const boughtData = location.state.detail\n\n            return (\n                <div>\n                    <h3 className=\"text-success\">Payment was Successfull</h3>\n                    <Card className=\"p-3\">\n                        Successfully bought\n                        <br />\n                        <span className=\"mb-2\" style={{ display: \"flex\" }}>\n                            {boughtData.name},\n                            ₹{boughtData.price} <i className=\"text-primary ml-1 mt-1 fas fa-check-circle\"></i>\n                        </span>\n                        <Link to=\"/all-orders/\">Go to orders page</Link>\n                    </Card>\n                </div>\n            )\n        } catch (error) {\n            return <Message variant='info'>Payment status not available.</Message>\n        }\n    }\n\n    return renderData()\n}\n\nexport default PaymentStatus\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { login } from '../actions/userActions'\nimport Message from '../components/Message';\n\n\nfunction LoginPage({ history }) {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const dispatch = useDispatch()\n\n    // reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { error, userInfo } = userLoginReducer\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/') // homepage\n        }\n    }, [history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(username, password))\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>                    \n                    <h1>Sign In</h1>                    \n                    {error && <Message variant='danger'>{error}</Message>}\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='username'>\n                            <Form.Label>\n                                Username\n                    </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"enter username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='password'>\n                            <Form.Label>\n                                Password\n                    </Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"enter your password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant='primary'>Sign In</Button>\n                    </Form>\n\n                    <Row className=\"py-3\">\n                        <Col>\n                            Do not have an account?\n                    <Link\n                                to={`/register`}\n                            > Register</Link>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n\n    )\n}\n\nexport default LoginPage","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { register } from '../actions/userActions'\nimport Message from '../components/Message'\n\nfunction RegisterPage({ history, variant }) {\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n\n    const dispatch = useDispatch()\n\n    // reducer\n    const userRegisterReducer = useSelector(state => state.userRegisterReducer)\n    const { error, userInfo } = userRegisterReducer\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/') // homepage\n        }\n    }, [history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match!')\n        } else {\n            dispatch(register(username, email, password))\n        }\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    <h1>Sign Up</h1>\n                    {message && <Message variant='danger'>{message}</Message>}\n                    {error && <Message variant='danger'>{error}</Message>}\n                    <Form onSubmit={submitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>\n                                Username\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"enter your username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='email'>\n                            <Form.Label>\n                                Email Address\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"email\"\n                                placeholder=\"enter your email\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='password'>\n                            <Form.Label>\n                                Password\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                placeholder=\"enter your password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='passwordConfirm'>\n                            <Form.Label>\n                                Confirm Password\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                placeholder=\"confirm your password\"\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant='primary'>Sign Up</Button>\n                    </Form>\n\n                    <Row className=\"py-3\">\n                        <Col>\n                            Already have an account?\n                    <Link\n                                to={`/login`}\n                            > Login</Link>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n\n    )\n}\n\nexport default RegisterPage","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { savedCardsList, updateStripeCard } from '../actions/cardActions'\nimport { Row, Col, Form, Button, Card } from 'react-bootstrap'\nimport { Spinner } from 'react-bootstrap'\nimport { UPDATE_STRIPE_CARD_RESET } from '../constants'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { useHistory } from 'react-router-dom'   \n\n\nconst CardUpdatePage = () => {\n\n    let history = useHistory()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n\n    const dispatch = useDispatch()\n    const [cardNumber, setCardNumber] = useState(\"\")\n    const [name, setName] = useState(\"\")\n    const [expMonth, setExpMonth] = useState(\"\")\n    const [expYear, setExpYear] = useState(\"\")\n    const [addressCity, setAddressCity] = useState(\"\")\n    const [addressCountry, setAddressCountry] = useState(\"\")\n    const [addressState, setAddressState] = useState(\"\")\n    const [addressZip, setAddressZip] = useState(\"\")\n    const [customerId, setCustomerId] = useState(\"\")\n    const [cardId, setCardId] = useState(\"\")\n\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // saved cards list reducer\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\n    const { stripeCards, loading } = savedCardsListReducer\n\n    // update card reducer\n    const updateStripeCardtReducer = useSelector(state => state.updateStripeCardtReducer)\n    const { success } = updateStripeCardtReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(savedCardsList())\n        }\n    }, [dispatch, history, userInfo, success])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (customerId && cardId) {\n            const all_card_data = {\n                card_number: cardNumber,\n                customer_id: customerId,\n                card_id: cardId,\n                exp_month: expMonth,\n                exp_year: expYear,\n                name_on_card: name,\n                address_city: addressCity,\n                address_country: addressCountry,\n                address_state: addressState,\n                address_zip: addressZip\n            }\n            // action\n            dispatch(updateStripeCard(all_card_data))\n        }\n    }\n\n    const setCustomerAndCardIds = (cus_Id, card_Id, c_num) => {\n        setCustomerId(cus_Id)\n        setCardId(card_Id)\n        setCardNumber(c_num)\n    }\n\n    if (success) {\n        alert(\"Card Successfully Updated\")\n        history.push(\"/stripe-card-details\")\n        dispatch({\n            type: UPDATE_STRIPE_CARD_RESET\n        })\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    <span\n                        className=\"d-flex justify-content-center\"\n                        style={{ display: \"flex\", marginBottom: \"15px\", color: \"#008080\" }}>\n                        <em>Update Card Details</em>\n                    </span>\n                    {loading && <Spinner animation=\"border\" />}\n                    {stripeCards.map((each, idx) => (\n                        <div key={idx}>\n                            <Card\n                                className=\"p-4 mb-4\"\n                                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                            >\n                                <Form onSubmit={onSubmit}>\n\n                                    <Form.Group controlId='name'>\n                                        <Form.Label>\n                                            Name on Card\n                                        </Form.Label>\n                                        <Form.Control\n                                            autoFocus={true}\n                                            type=\"text\"\n                                            defaultValue={each.name_on_card}\n                                            placeholder=\"full name\"\n                                            onChange={(e) => setName(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='month'>\n                                        <Form.Label>\n                                            Exp Month\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            pattern=\"[0-9]+\"\n                                            maxLength=\"2\"\n                                            defaultValue={each.exp_month}\n                                            placeholder=\"exp month\"\n                                            onChange={(e) => setExpMonth(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='year'>\n                                        <Form.Label>\n                                            Exp Year\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            pattern=\"[0-9]+\"\n                                            defaultValue={each.exp_year}\n                                            placeholder=\"exp year\"\n                                            maxLength=\"4\"\n                                            onChange={(e) => setExpYear(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='city'>\n                                        <Form.Label>\n                                            Address City\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_city}\n                                            placeholder=\"address city\"\n                                            onChange={(e) => setAddressCity(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='country'>\n                                        <Form.Label>\n                                            Address Country\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_country}\n                                            placeholder=\"address country\"\n                                            onChange={(e) => setAddressCountry(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='state'>\n                                        <Form.Label>\n                                            Address State\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_state}\n                                            placeholder=\"address state\"\n                                            onChange={(e) => setAddressState(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='zip'>\n                                        <Form.Label>\n                                            Address Zip\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_zip}\n                                            placeholder=\"address zip\"\n                                            pattern=\"[0-9]+\"\n                                            maxLength=\"6\"\n                                            onChange={(e) => setAddressZip(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Button\n                                        type=\"submit\"\n                                        variant='success'\n                                        onClick={() => setCustomerAndCardIds(each.customer_id, each.card_id, each.card_number)}\n                                        style={{ width: \"100%\" }}\n                                        className=\"btn-sm button-focus-css\">\n                                        Save Changes\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        variant='primary'\n                                        onClick={() => history.push(\"/stripe-card-details/\")}\n                                        style={{ width: \"100%\" }}\n                                        className=\"btn-sm mt-2 button-focus-css\">\n                                        Cancel\n                                    </Button>\n                                </Form>\n                            </Card>\n                        </div>\n                    ))}\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default CardUpdatePage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { savedCardsList } from '../actions/cardActions'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { Spinner } from 'react-bootstrap'\nimport Message from \"../components/Message\"\nimport DeleteCardComponent from '../components/DeleteCardComponent'\nimport { useHistory } from 'react-router-dom'\n\n\nconst CardDetailsPage = () => {\n\n    let history = useHistory()\n\n    const dispatch = useDispatch()\n    const [userId, setUserId] = useState(0)\n    const [runCardDeleteHandler, setRunCardDeleteHandler] = useState(false)\n    const [deleteCardNumber, setDeleteCardNumber] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // saved cards list reducer\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\n    const { stripeCards, loading } = savedCardsListReducer\n\n    // saved cards list reducer\n    const deleteSavedCardReducer = useSelector(state => state.deleteSavedCardReducer)\n    const { success } = deleteSavedCardReducer\n\n\n    // toggle run card delete handler\n    const toggleRunCardDeleteHandler = () => {\n        setRunCardDeleteHandler(!runCardDeleteHandler)\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(savedCardsList())\n        }\n    }, [dispatch, history, userInfo])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    // card deletion message\n    if (success) {\n        alert(\"Card successfully deleted.\")\n        window.location.reload()\n\n    }\n\n    return (\n        <div>\n            {loading && <span style={{ display: \"flex\" }}>\n                <h5>Getting Card Information</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n\n            {/* Modal Start*/}\n            <div>\n                <>\n                    <DeleteCardComponent\n                        userId={userId}\n                        deleteCardNumber={deleteCardNumber}\n                        runCardDeleteHandler={runCardDeleteHandler}\n                        toggleRunCardDeleteHandler={toggleRunCardDeleteHandler}\n                    />\n                </>\n            </div>\n\n            {stripeCards.length > 0 ? stripeCards.map((each, idx) => (\n                <div key={idx}>\n                    <Container>\n                        <Row className=\"mr-6 mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Name on Card:</Col>\n                            <Col className=\"p-3\">\n                                {each.name_on_card ? <span>\n                                    {each.name_on_card}\n                                </span>\n                                    : \"Not Set\"}\n                            </Col>\n\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Exp Month:</Col>\n                            <Col className=\"p-3\">{each.exp_month ? each.exp_month : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Exp Year:</Col>\n                            <Col className=\"p-3\">{each.exp_year ? each.exp_year : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mr-6 mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address City:</Col>\n                            <Col className=\"p-3\">{each.address_city ? each.address_city : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address Country:</Col>\n                            <Col className=\"p-3\">{each.address_country ? each.address_country : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address State:</Col>\n                            <Col className=\"p-3\">{each.address_state ? each.address_state : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address Zip:</Col>\n                            <Col className=\"p-3\">{each.address_zip ? each.address_zip : \"Not Set\"}</Col>\n                        </Row>\n                    </Container>\n                    <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <Link to=\"/stripe-card-update/\">Update Card details</Link>\n                        <span className=\"ml-1 text-primary\">| </span>\n                        <span className=\"ml-1\"></span>\n\n                        <Link to=\"#\"\n                            onClick={() => {\n                                setDeleteCardNumber(each.card_number)\n                                setUserId(each.user)\n                                setRunCardDeleteHandler(!runCardDeleteHandler)\n                            }}\n                        >Delete Card</Link>\n                    </span>\n                </div>\n            )) :\n                <div>\n                    <Message variant='info'>Card details not available.</Message>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default CardDetailsPage\n","import React, { useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userDetails, logout, checkTokenValidation } from '../actions/userActions'\n//import { UPDATE_USER_ACCOUNT_RESET } from '../constants'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport {useHistory} from 'react-router-dom'\n\n\nfunction AccountPage() {\n\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // user details reducer\n    const userDetailsReducer = useSelector(state => state.userDetailsReducer)\n    const { user: userAccDetails, loading } = userDetailsReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            try {\n                dispatch(checkTokenValidation())\n                dispatch(userDetails(userInfo.id))\n            } catch (error) {\n                history.push(\"/\")\n            }\n        }\n    }, [history, userInfo, dispatch])\n\n    // logout\n    const logoutHandler = () => {\n        dispatch(logout()) // action\n    }\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n      }\n\n    const renderData = () => {\n        try {\n\n            return (\n                <div>\n                    {loading && <span style = {{ display: \"flex\" }}><h5>Getting User Information</h5><span className = \"ml-2\"><Spinner animation=\"border\" /></span></span>}\n                    <Container>\n                        <Row className=\"mr-6 mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Name:</Col>\n                            <Col className=\"p-3\">{userAccDetails.username}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Email:</Col>\n                            <Col className=\"p-3\">{userAccDetails.email}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Admin Privileges:</Col>\n                            <Col className=\"p-3\">{userAccDetails.admin ? \"Yes\" : \"No\"}</Col>\n                        </Row>\n                    </Container>\n                    <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <Link to={`/account/update`}>Update Account details</Link>\n                        <span className=\"ml-1 text-primary\">| </span>\n                        <span className=\"ml-1\"></span>\n\n                        <Link to={`/account/delete/`}>Delete Account</Link>\n                    </span>\n                </div>\n            )\n        } catch (error) {\n            return <Message variant='danger'>Something went wrong, go back to <Link\n                onClick={logoutHandler} to={`/login`}\n            > Login</Link> page.</Message>\n        }\n    }\n\n\n    return renderData()\n\n}\n\nexport default AccountPage\n","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userDetails, userUpdateDetails, checkTokenValidation, logout } from '../actions/userActions'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport {useHistory} from 'react-router-dom'\nimport { UPDATE_USER_DETAILS_RESET } from '../constants'\n\n\nfunction AccountUpdatePage() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n  \n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // user details reducer\n    const userDetailsReducer = useSelector(state => state.userDetailsReducer)\n    const { user: userAccDetails, loading } = userDetailsReducer\n\n    // user update details reducer\n    const userDetailsUpdateReducer = useSelector(state => state.userDetailsUpdateReducer)\n    const { success } = userDetailsUpdateReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n        dispatch(checkTokenValidation())\n        dispatch(userDetails(userInfo.id))\n    }, [dispatch, history, userInfo])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n      }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const updatedUsername = username === \"\" ? userAccDetails.username : username\n        const updatedEmail = email === \"\" ? userAccDetails.email : email\n\n        if (password !== confirmPassword) {\n            alert(\"Passwords do not match\")\n        } else {\n            const userData = {\n                'username': updatedUsername,\n                'email': updatedEmail,\n                'password': password,\n            }\n            dispatch(userUpdateDetails(userData))\n        }\n    }\n\n    // logout\n    const logoutHandler = () => {\n        history.push(\"/login\")\n        dispatch(logout()) // action        \n    }\n\n    if(success) {\n        alert(\"Account successfully updated.\")\n        dispatch({\n            type: UPDATE_USER_DETAILS_RESET\n        })\n        history.push(\"/account/\")\n        dispatch(userDetails(userInfo.id))\n    }\n\n    const renderData = () => {\n        try {\n            return (\n                <div>\n                    <Row className='justify-content-md-center'>\n                        <Col xs={12} md={6}>\n                            <span\n                                className=\"d-flex justify-content-center\"\n                                style={{ display: \"flex\", marginBottom: \"15px\", color: \"#008080\" }}>\n                                <em>Update User Details</em>\n                            </span>\n                            {loading && <Spinner animation=\"border\" />}\n                            <Form onSubmit={onSubmit}>\n\n                                <Form.Group controlId='username'>\n                                    <Form.Label>\n                                        Username\n                                    </Form.Label>\n                                    <Form.Control\n                                        autoFocus={true}\n                                        type=\"text\"\n                                        defaultValue={userAccDetails.username}\n                                        placeholder=\"username\"\n                                        onChange={(e) => setUsername(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='email'>\n                                    <Form.Label>\n                                        Email Address\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"email\"\n                                        placeholder=\"enter email\"\n                                        defaultValue={userAccDetails.email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='password'>\n                                    <Form.Label>\n                                        Reset-Password\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder=\"enter new password\"\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='confirmPassword'>\n                                    <Form.Label>\n                                        Confirm Password\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder=\"confirm new password\"\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Button type=\"submit\" variant='success' className=\"btn-sm\">Save Changes</Button>\n                                <Link to={`/account`}>\n                                    <button className=\"btn btn-primary btn-sm ml-2\" type=\"button\">\n                                        Cancel\n                                    </button>\n                                </Link>\n                            </Form>\n                        </Col>\n                    </Row>\n                </div>\n            )\n        } catch (error) {\n            return <Message variant='danger'>Something went wrong, go back to <Link\n                onClick={logoutHandler} to={`/login`}\n            > Login</Link> page.</Message>\n        }\n    }\n\n    return renderData()\n}\n\nexport default AccountUpdatePage\n","import React, { useState } from 'react'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout, userAccountDelete, checkTokenValidation } from '../actions/userActions'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport { useHistory } from \"react-router-dom\";\nimport { DELETE_USER_ACCOUNT_RESET } from '../constants'\n\n\nfunction DeleteUserAccount() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n    const [myPassword, setMyPassword] = useState(\"\")\n\n    \n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // delete user account reducer\n    const deleteUserAccountReducer = useSelector(state => state.deleteUserAccountReducer)\n    const { success, loading, error } = deleteUserAccountReducer\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const userData = {\n            \"id\": userInfo.id,\n            \"password\": myPassword\n        }\n        dispatch(checkTokenValidation())        \n        dispatch(userAccountDelete(userData))        \n    }\n    \n    if(success) {\n        alert(\"Account successfully deleted.\")\n        dispatch({\n            type: DELETE_USER_ACCOUNT_RESET\n        })\n        dispatch(logout()) // action\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    <h3>Confirm your password to delete your account.</h3>\n                    {loading && <span style = {{ display: \"flex\" }}><h5>Please wait</h5><span className = \"ml-2\"><Spinner animation=\"border\" /></span></span>}                    \n                    {error && <Message variant='danger'>Incorrect Password!</Message>}        \n                    <div className=\"mt-4\">\n                        <Form onSubmit={onSubmit}>\n                            <Form.Group controlId='password'>\n                                <Form.Label>\n                                    Password\n                            </Form.Label>\n                                <Form.Control\n                                    required\n                                    type=\"password\"\n                                    placeholder=\"enter your password\"\n                                    value={myPassword}\n                                    onChange={(e) => setMyPassword(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Button type=\"submit\" variant=\"danger\">Confirm Delete</Button>\n                        </Form>\n                    </div>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default DeleteUserAccount\n","import React, { useState } from 'react'\nimport { Form, Button, Card, InputGroup } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createUserAddress, getAllAddress } from '../actions/userActions'\nimport { CREATE_USER_ADDRESS_RESET } from '../constants'\nimport Message from './Message'\n\n\nconst CreateAddressComponent = ({ toggleCreateAddress }) => {\n\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n    const [pinCode, setPinCode] = useState(\"\")\n    const [houseNumber, setHouseNumber] = useState(\"\")\n    const [landmark, setLandmark] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [state, setState] = useState(\"\")\n\n    // Create User Address Reducer\n    const createUserAddressReducer = useSelector(state => state.createUserAddressReducer)\n    const { success: addressCreationSuccess, error: errorCreatingAddress } = createUserAddressReducer\n\n    const addressSubmitHandler = (e) => {\n        e.preventDefault()\n        const addressData = {\n            \"name\": name,\n            \"phone_number\": phoneNumber,\n            \"pin_code\": pinCode,\n            \"house_no\": houseNumber,\n            \"landmark\": landmark,\n            \"city\": city,\n            \"state\": state,\n        }\n        dispatch(createUserAddress(addressData))\n    }\n\n    if (addressCreationSuccess) {\n        alert(\"Address successfully created.\")\n        toggleCreateAddress()\n        dispatch({\n            type: CREATE_USER_ADDRESS_RESET\n        })\n        dispatch(getAllAddress())\n    }\n\n    return (\n        <div>\n            <p className=\"text-center text-info\"><em>New Address</em></p>\n            {errorCreatingAddress\n                ? <Message variant='danger'>\n                    {errorCreatingAddress}\n                </Message>\n                :\n                \"\"}\n            <Card\n                className=\"mx-auto mb-4\"\n                style={{ width: \"50%\", border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n            >\n                <Card.Body>\n                    <Form onSubmit={addressSubmitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>\n                                Name\n                            </Form.Label>\n                            <Form.Control\n                                autoFocus={true}\n                                type=\"text\"\n                                placeholder=\"enter your name\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='phoneNumber'>\n                            <Form.Label>\n                                Phone Number\n                            </Form.Label>\n                            <InputGroup>\n                                <InputGroup.Text>+91</InputGroup.Text>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"phone number\"\n                                    pattern=\"[0-9]+\"\n                                    maxLength=\"10\"\n                                    value={phoneNumber}\n                                    onChange={(e) => setPhoneNumber(e.target.value)}\n                                >\n                                </Form.Control>\n                            </InputGroup>\n                        </Form.Group>\n\n                        <Form.Group controlId='pinCode'>\n                            <Form.Label>\n                                Pin Code\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"pin code\"\n                                value={pinCode}\n                                pattern=\"[0-9]+\"\n                                maxLength=\"6\"\n                                onChange={(e) => setPinCode(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='houseNumber'>\n                            <Form.Label>\n                                House No./Address\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"house number\"\n                                value={houseNumber}\n                                onChange={(e) => setHouseNumber(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='landmark'>\n                            <Form.Label>\n                                Landmark\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"landmark\"\n                                value={landmark}\n                                onChange={(e) => setLandmark(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='city'>\n                            <Form.Label>\n                                City\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"city\"\n                                value={city}\n                                onChange={(e) => setCity(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='state'>\n                            <Form.Label>\n                                State\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"state\"\n                                value={state}\n                                onChange={(e) => setState(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm\"\n                            type=\"submit\"\n                            variant=\"success\"\n                        >\n                            Save Address\n                        </Button>\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm mt-2\"\n                            variant=\"primary\"\n                            onClick={() => toggleCreateAddress()}>\n                            Cancel\n                        </Button>\n                    </Form>\n\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default CreateAddressComponent\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Card, Modal, Button, Spinner } from 'react-bootstrap'\nimport { deleteUserAddress, getAllAddress, checkTokenValidation, logout } from '../actions/userActions'\nimport { DELETE_USER_ADDRESS_RESET, GET_SINGLE_ADDRESS_RESET } from '../constants'\nimport { useHistory } from 'react-router-dom'\nimport CreateAddressComponent from '../components/CreateAddressComponent'\n\n\nfunction AllAddressesOfUserPage() {\n\n    let history = useHistory()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n\n    const dispatch = useDispatch()\n    const [deleteAddress, setDeleteAddress] = useState(\"\")\n    const [createAddress, setCreateAddress] = useState(false)\n\n    // modal state and functions\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get address list reducer\n    const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer)\n    const { addresses, loading: loadingAllAddresses } = getAllAddressesOfUserReducer\n\n    // get address list reducer\n    const deleteUserAddressReducer = useSelector(state => state.deleteUserAddressReducer)\n    const { success: addressDeletionSuccess } = deleteUserAddressReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getAllAddress())\n            dispatch({\n                type: GET_SINGLE_ADDRESS_RESET\n            })\n        }\n    }, [dispatch, history, userInfo, addressDeletionSuccess])\n\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    if (addressDeletionSuccess) {\n        alert(\"Address successfully deleted.\")\n        dispatch({\n            type: DELETE_USER_ADDRESS_RESET\n        })\n        dispatch(getAllAddress())\n    }\n\n    // address deletion handler\n    const deleteAddressHandler = (address) => {\n        setDeleteAddress(address)\n        handleShow()\n    }\n\n    // address delete confirmation\n    const confirmDelete = (id) => {\n        dispatch(deleteUserAddress(id))\n        handleClose()\n    }\n\n    // toggle Create Address Button\n    const toggleCreateAddress = () => {\n        setCreateAddress(!createAddress)\n    }\n\n\n    return (\n        <div>\n\n            {/* Modal Start*/}\n            <div>\n                <>\n                    <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>\n                                <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                                {\" \"}\n                                Delete Confirmation\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            Are you sure you want to delete this address\n                            {\" \"}<em>\"{deleteAddress.house_no}, {deleteAddress.city}, {deleteAddress.state}\"</em>?\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"danger\" onClick={() => confirmDelete(deleteAddress.id)}>\n                                Confirm Delete\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleClose}>\n                                Cancel\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </>\n            </div>\n\n            {/* Modal End */}\n\n            {/* loading spinner conditions */}\n\n            {loadingAllAddresses && <span style={{ display: \"flex\" }}>\n                <h5>Getting addresses</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n\n            {/* Create Address */}\n            {createAddress ?\n                <div>\n                    <CreateAddressComponent toggleCreateAddress={toggleCreateAddress} />\n                </div>\n                :\n                <button\n                    className=\"btn btn-sm btn-primary mb-2 button-focus-css\"\n                    onClick={() => toggleCreateAddress()}\n                >\n                    Add new address +\n                </button>\n            }\n\n            {addresses && !createAddress ? addresses.map((address, idx) => (\n                <div key={idx}>\n                    <Card\n                        className=\"p-2 mb-2\"\n\n                        style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                        key={address.id}\n\n                    >\n                        <span><b>Name: </b>{address.name}</span>\n                        <span><b>Phone No: </b>+91 {address.phone_number}</span>\n                        <span><b>Address: </b>{address.house_no},\n                            near {address.landmark}, {address.city}, {address.state},\n                            {address.pin_code}\n\n                            {/* Delete Address Buttton */}\n\n                            <span\n                                onClick={() => deleteAddressHandler(address)}>\n                                <i\n                                    title=\"delete address\"\n                                    className=\"mt-2 fas fa-trash-alt fa-lg delete-button-css\"\n                                ></i>\n                            </span>\n\n                            {/* Edit Address Buttton */}\n\n                            <span\n                                onClick={() => history.push(`/all-addresses/${address.id}/`)}>\n                                <i\n                                    title=\"edit address\"\n                                    className=\"mt-2 mr-2 fas fa-edit fa-lg edit-button-css\"\n                                ></i>\n                            </span>\n\n                        </span>\n\n                    </Card>\n                </div>\n            ))\n                :\n                \"\"\n            }\n\n        </div >\n    )\n}\n\nexport default AllAddressesOfUserPage\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button, Card } from 'react-bootstrap'\nimport { checkTokenValidation, getAllAddress, getSingleAddress, logout, updateUserAddress } from '../actions/userActions'\nimport { useHistory } from 'react-router-dom'\nimport { UPDATE_USER_ADDRESS_RESET } from '../constants'\n\n\nconst AddressUpdatePage = ({ match }) => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n    const [pinCode, setPinCode] = useState(\"\")\n    const [houseNumber, setHouseNumber] = useState(\"\")\n    const [landmark, setLandmark] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [state, setState] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // get single address reducer    \n    const getSingleAddressReducer = useSelector(state => state.getSingleAddressReducer)\n    const { address, error: errorFetchingAddress } = getSingleAddressReducer\n\n    // get single address reducer    \n    const updateUserAddressReducer = useSelector(state => state.updateUserAddressReducer)\n    const { success: addressUpdateSuccess } = updateUserAddressReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getSingleAddress(match.params.id))\n        }\n    }, [dispatch, history, userInfo, match])\n\n    // token validation check\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    const addressSubmitHandler = (e) => {\n        e.preventDefault()\n        const updatedAddress = {\n            \"name\": name,\n            \"phone_number\": phoneNumber,\n            \"pin_code\": pinCode,\n            \"house_no\": houseNumber,\n            \"landmark\": landmark,\n            \"city\": city,\n            \"state\": state,\n        }\n        dispatch(updateUserAddress(match.params.id, updatedAddress))\n    }\n\n    if(addressUpdateSuccess) {\n        alert(\"Address updated successfully.\")\n        dispatch({\n            type: UPDATE_USER_ADDRESS_RESET\n        })\n        history.push(\"/all-addresses/\")\n        dispatch(getAllAddress())\n    }\n\n    return (\n        <div>\n            <p className=\"text-center text-info\"><em>Update Address</em></p>\n            {errorFetchingAddress && <h3>Invalid Address Request</h3>}\n            <Card\n                className=\"mx-auto mb-4\"\n                style={{ width: \"50%\", border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n            >\n                <Card.Body>\n                    <Form onSubmit={addressSubmitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>\n                                Name\n                            </Form.Label>\n                            <Form.Control\n                                autoFocus={true}\n                                type=\"text\"\n                                placeholder=\"enter your name\"\n                                defaultValue={address ? address.name : \"\"}\n                                onChange={(e) => setName(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='phoneNumber'>\n                            <Form.Label>\n                                Phone Number\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"phone number\"\n                                pattern=\"[0-9]+\"\n                                maxLength=\"10\"\n                                defaultValue={address ? address.phone_number : \"\"}\n                                onChange={(e) => setPhoneNumber(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='pinCode'>\n                            <Form.Label>\n                                Pin Code\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"pin code\"\n                                defaultValue={address ? address.pin_code : \"\"}\n                                pattern=\"[0-9]+\"\n                                maxLength=\"6\"\n                                onChange={(e) => setPinCode(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='houseNumber'>\n                            <Form.Label>\n                                House No./Address\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"house number\"\n                                defaultValue={address ? address.house_no : \"\"}\n                                onChange={(e) => setHouseNumber(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='landmark'>\n                            <Form.Label>\n                                Landmark\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"landmark\"\n                                defaultValue={address ? address.landmark : \"\"}\n                                onChange={(e) => setLandmark(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='city'>\n                            <Form.Label>\n                                City\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"city\"\n                                defaultValue={address ? address.city : \"\"}\n                                onChange={(e) => setCity(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='state'>\n                            <Form.Label>\n                                State\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"state\"\n                                defaultValue={address ? address.state : \"\"}\n                                onChange={(e) => setState(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm\"\n                            type=\"submit\"\n                            variant=\"success\"\n                        >\n                            Save Changes\n                        </Button>\n\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm mt-2\"\n                            variant=\"primary\"\n                            onClick={() => history.push(\"/all-addresses/\")}\n                        >\n                            Cancel\n                        </Button>\n\n\n                    </Form>\n\n                </Card.Body>\n            </Card>\n        </div >\n    )\n}\n\nexport default AddressUpdatePage\n","export const dateCheck = (param) => {\n    //console.log(\"dateCheck ===>\", param)\n    // Example: 2021-01-12\n    const dateValue = param.slice(8, 10);\n    const monthValue = param.slice(5, 7);\n    const yearValue = param.slice(0, 4);\n  \n    switch (monthValue) {\n      case \"01\":\n        return `${dateValue} January ${yearValue}`;\n      case \"02\":\n        return `${dateValue} Feburary ${yearValue}`;\n      case \"03\":\n        return `${dateValue} March ${yearValue}`;\n      case \"04\":\n        return `${dateValue} April ${yearValue}`;\n      case \"05\":\n        return `${dateValue} May ${yearValue}`;\n      case \"06\":\n        return `${dateValue} June ${yearValue}`;\n      case \"07\":\n        return `${dateValue} July ${yearValue}`;\n      case \"08\":\n        return `${dateValue} August ${yearValue}`;\n      case \"09\":\n        return `${dateValue} September ${yearValue}`;\n      case \"10\":\n        return `${dateValue} October ${yearValue}`;\n      case \"11\":\n        return `${dateValue} November ${yearValue}`;\n      case \"12\":\n        return `${dateValue} December ${yearValue}`;\n      default:\n        return null;\n    }\n  };\n","import React, { useState } from 'react'\n\nconst SearchBarForOrdersPage = ({ handleSearchTerm, placeholderValue }) => {\n\n    const [searchTerm, setSearchTerm] = useState(\"\")\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        handleSearchTerm(searchTerm);\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <span\n                    style={{ display: \"flex\" }}\n                    className=\"\"\n                >\n                    <input\n                        type=\"text\"\n                        value={searchTerm}\n                        placeholder={placeholderValue}\n                        className=\"form-control\"\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary ml-2 button-focus-css\"\n                    ><i className=\"fas fa-search\"></i>\n                    </button>\n                </span>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBarForOrdersPage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { checkTokenValidation, getAllOrders, logout } from '../actions/userActions'\nimport { useHistory } from 'react-router-dom'\nimport { Table, Spinner } from 'react-bootstrap'\nimport { dateCheck } from '../components/GetDate'\nimport { changeDeliveryStatus } from '../actions/productActions'\nimport { CHANGE_DELIVERY_STATUS_RESET } from '../constants'\nimport SearchBarForOrdersPage from '../components/SearchBarForOrdersPage'\nimport Message from '../components/Message'\n\n\nfunction OrdersListPage() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n    const placeholderValue = \"Search orders by Customer Name, Address or by Ordered Item\"\n\n    const todays_date = dateCheck(new Date().toISOString().slice(0, 10))\n\n    const [currentDateInfo] = useState(todays_date)\n    const [idOfchangeDeliveryStatus, setIdOfchangeDeliveryStatus] = useState(0)\n    const [cloneSearchTerm, setCloneSearchTerm] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get all orders reducer\n    const getAllOrdersReducer = useSelector(state => state.getAllOrdersReducer)\n    const { orders, loading: loadingOrders } = getAllOrdersReducer\n\n    // change delivery status reducer\n    const changeDeliveryStatusReducer = useSelector(state => state.changeDeliveryStatusReducer)\n    const { success: deliveryStatusChangeSuccess, loading: deliveryStatusChangeSpinner } = changeDeliveryStatusReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getAllOrders())\n        }\n    }, [userInfo, dispatch, history])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    const changeDeliveryStatusHandler = (id, status) => {\n        setIdOfchangeDeliveryStatus(id)\n        const productData = {\n            \"is_delivered\": status,\n            \"delivered_at\": status ? currentDateInfo : \"Not Delivered\"\n        }\n        dispatch(changeDeliveryStatus(id, productData))\n    }\n\n    if (deliveryStatusChangeSuccess) {\n        alert(\"Delivery status changed successfully\")\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_RESET\n        })\n        dispatch(getAllOrders())\n    }\n\n    const handleSearchTerm = (term) => {\n        setCloneSearchTerm(term)\n    };\n\n\n    return (\n        <div>\n            {loadingOrders && <span style={{ display: \"flex\" }}>\n                <h5>Getting Orders</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n            {userInfo.admin && <SearchBarForOrdersPage handleSearchTerm={handleSearchTerm} placeholderValue={placeholderValue} />}\n                {orders.length > 0 ?\n                <Table className=\"mt-2\" striped bordered>\n                    <thead>\n                        <tr className=\"p-3 bg-info text-white text-center\">\n                            <th>Order Id</th>\n                            <th>Customer Name</th>\n                            <th>Card Used</th>\n                            <th>Delivery Address</th>\n                            <th>Ordered Item</th>\n                            <th>Paid Status</th>\n                            <th>Paid On</th>\n                            <th>Total Amount</th>\n                            <th>Delivered Status</th>\n                            <th>Delivered On</th>\n                            {userInfo.admin &&\n                                <th>Delivery Status</th>\n                            }\n                        </tr>\n                    </thead>\n\n                    {/* filter orders by name, address or ordered item */}\n\n                    {orders.filter((item) => (\n\n                        item.name.toLowerCase().includes(cloneSearchTerm)\n                        ||\n                        item.ordered_item.toLowerCase().includes(cloneSearchTerm)\n                        ||\n                        item.address.toLowerCase().includes(cloneSearchTerm)\n                    )\n\n                    ).map((order, idx) => (\n                        <tbody key={idx}>\n                            <tr className=\"text-center\">\n                                <td>\n                                    {order.id}\n                                </td>\n                                <td>{order.name}</td>\n                                <td>{order.card_number}</td>\n                                <td>{order.address}</td>\n                                <td>{order.ordered_item}</td>\n                                <td>{order.paid_status ?\n                                    <i className=\"fas fa-check-circle text-success\"></i>\n                                    :\n                                    <i className=\"fas fa-times-circle text-danger\"></i>\n                                }</td>\n                                <td>{dateCheck(order.paid_at)}</td>\n                                <td>{order.total_price} INR</td>\n                                <td>{order.is_delivered ?\n                                    <i className=\"fas fa-check-circle text-success\"></i>\n                                    :\n                                    <i className=\"fas fa-times-circle text-danger\"></i>\n                                }</td>\n                                <td>{order.delivered_at}</td>\n                                {userInfo.admin &&\n                                    <td>\n                                        {order.is_delivered ?\n                                            <button\n                                                className=\"btn btn-outline-danger btn-sm\"\n                                                onClick={() => changeDeliveryStatusHandler(order.id, false)}\n                                            >\n                                                {deliveryStatusChangeSpinner\n                                                    &&\n                                                    idOfchangeDeliveryStatus === order.id\n                                                    ?\n                                                    <Spinner animation=\"border\" />\n                                                    :\n                                                    \"Mark as Undelivered\"}\n                                            </button>\n                                            :\n                                            <button\n                                                className=\"btn btn-outline-primary btn-sm\"\n                                                onClick={() => changeDeliveryStatusHandler(order.id, true)}\n                                            >\n                                                {deliveryStatusChangeSpinner\n                                                    &&\n                                                    idOfchangeDeliveryStatus === order.id\n                                                    ?\n                                                    <Spinner animation=\"border\" />\n                                                    :\n                                                    \"Mark as delivered\"}\n                                            </button>\n                                        }\n                                    </td>\n                                }\n                            </tr>\n                        </tbody>\n                    ))}\n                </Table>\n                : <Message variant=\"info\">No orders yet.</Message> }\n        </div>\n    )\n}\n\nexport default OrdersListPage","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button } from 'react-bootstrap'\nimport { createProduct } from '../actions/productActions'\nimport { useHistory } from 'react-router'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { CREATE_PRODUCT_RESET } from '../constants'\nimport Message from '../components/Message';\n\n\nconst ProductCreatePage = () => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [stock, setStock] = useState(false)\n    const [image, setImage] = useState(null)\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // create product reducer\n    const createProductReducer = useSelector(state => state.createProductReducer)\n    const { product, success: productCreationSuccess, error: productCreationError } = createProductReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n        dispatch(checkTokenValidation())\n    }, [dispatch, userInfo, history])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        let form_data = new FormData()\n        form_data.append('name', name)\n        form_data.append('description', description)\n        form_data.append('price', price)\n        form_data.append('stock', stock)\n        form_data.append('image', image)\n\n        dispatch(createProduct(form_data))\n    }\n\n    if (productCreationSuccess) {\n        alert(\"Product successfully created.\")\n        history.push(`/product/${product.id}/`)\n        dispatch({\n            type: CREATE_PRODUCT_RESET\n        })\n    }\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            {productCreationError && <Message variant='danger'>{productCreationError.image[0]}</Message>}\n            <span\n                className=\"d-flex justify-content-center text-info\"\n                >\n                <em>New Product</em>\n            </span>\n            <Form onSubmit={onSubmit}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>\n                        <b>\n                            Product Name\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        autoFocus={true}\n                        type=\"text\"\n                        value={name}\n                        placeholder=\"product name\"\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='description'>\n                    <Form.Label>\n                        <b>\n                            Product Description\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        value={description}\n                        placeholder=\"product description\"\n                        onChange={(e) => setDescription(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='price'>\n                    <Form.Label>\n                        <b>\n                            Price\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        pattern=\"[0-9]+(\\.[0-9]{1,2})?%?\"\n                        value={price}\n                        placeholder=\"199.99\"\n                        step=\"0.01\"\n                        maxLength=\"8\"\n                        onChange={(e) => setPrice(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <span style={{ display: \"flex\" }}>\n                    <label>In Stock</label>\n                    <input\n                        type=\"checkbox\"\n                        value={stock}\n                        className=\"ml-2 mt-2\"\n                        onChange={() => setStock(!stock)}\n                    />\n                </span>\n\n                <Form.Group controlId='image'>\n                    <Form.Label>\n                        <b>\n                            Product Image\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        type=\"file\"\n                        onChange={(e) => setImage(e.target.files[0])}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button\n                    type=\"submit\"\n                    variant='success'\n                    className=\"btn-sm button-focus-css\"\n                >\n                    Save Product\n                </Button>\n                <Button\n                    type=\"submit\"\n                    variant='primary'\n                    className=\"btn-sm ml-2 button-focus-css\"\n                    onClick={() => history.push(\"/\")}\n                >\n                    Cancel\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default ProductCreatePage\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Spinner } from 'react-bootstrap'\nimport { getProductDetails, updateProduct } from '../actions/productActions'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { UPDATE_PRODUCT_RESET } from '../constants'\nimport Message from '../components/Message'\n\n\nconst ProductUpdatePage = ({ match }) => {\n\n    // product details reducer\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\n    const { loading: loadingPageDetails, product } = productDetailsReducer\n\n    // as our errors will be displayed at the top of the webpage\n    const scrollToTop = () => {\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    }\n\n\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [stock, setStock] = useState(product.stock)\n    const [image, setImage] = useState(\"\")\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [newImage, setNewImage] = useState(false)\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // product details reducer\n    const updateProductReducer = useSelector(state => state.updateProductReducer)\n    const {\n        success: productUpdationSuccess,\n        loading: loadingProductUpdations,\n        error: productUpdationError\n    } = updateProductReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n    \n    // get product details\n    useEffect(() => {\n        if (!userInfo || !userInfo.admin) {\n            history.push(\"/login\")\n        }\n        dispatch(checkTokenValidation())\n        dispatch(getProductDetails(match.params.id))\n    }, [dispatch, userInfo, history, match])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const productId = product.id\n        let form_data = new FormData()\n        form_data.append('name', name)\n        form_data.append('description', description)\n        form_data.append('price', price)\n        form_data.append('stock', stock)\n        form_data.append('image', image)\n\n        dispatch(updateProduct(productId, form_data))\n    }\n\n    if (productUpdationSuccess) {\n        alert(\"Product successfully updated.\")\n        dispatch({\n            type: UPDATE_PRODUCT_RESET\n        })\n        history.push(`/product/${product.id}`)\n    }\n\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            <span\n                className=\"d-flex justify-content-center text-info\"\n            >\n                <em>Edit Product</em>\n            </span>\n            {productUpdationError ? (\n                <div>\n                    {scrollToTop()}\n                    <Message variant='danger'>{productUpdationError.image[0]}</Message>\n                </div>\n            ) : \"\"}\n            {loadingPageDetails && <span style={{ display: \"flex\" }}>\n                <h5>Getting Product Details</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n            {loadingProductUpdations ? <span style={{ display: \"flex\" }}>\n                <h5>Updating Product</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span> : \"\"}\n            <Form onSubmit={onSubmit}>\n\n                <Form.Group controlId='image'>\n                    <Form.Label>\n                        <b>\n                            Product Image\n                        </b>\n                    </Form.Label>\n                    <p>\n                        <img src={product.image} alt={product.name} height=\"200\" />\n                    </p>\n\n                    {newImage ?\n                        <div>\n                            <Form.Control\n                                type=\"file\"\n                                onChange={(e) => setImage(e.target.files[0])}\n                            >\n                            </Form.Control>\n\n                            <span\n                                onClick={() => {\n                                    setNewImage(!newImage)\n                                    setImage(\"\")\n                                    dispatch({\n                                        type: UPDATE_PRODUCT_RESET\n                                    })\n                                }}\n                                className=\"btn btn-primary btn-sm mt-2\"\n                            >\n                                Cancel\n                            </span>\n                        </div>\n                        :\n                        <p>\n                            <span\n                                onClick={() => setNewImage(!newImage)}\n                                className=\"btn btn-success btn-sm\"\n                            >\n                                choose different image\n                            </span>\n                        </p>\n                    }\n                </Form.Group>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>\n                        <b>\n                            Product Name\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        autoFocus={true}\n                        type=\"text\"\n                        defaultValue={product.name}\n                        placeholder=\"product name\"\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='description'>\n                    <Form.Label>\n                        <b>\n                            Product Description\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        defaultValue={product.description}\n                        placeholder=\"product description\"\n                        onChange={(e) => setDescription(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='price'>\n                    <Form.Label>\n                        <b>\n                            Price\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        pattern=\"[0-9]+(\\.[0-9]{1,2})?%?\"\n                        defaultValue={product.price}\n                        placeholder=\"199.99\"\n                        step=\"0.01\"\n                        maxLength=\"8\"\n                        onChange={(e) => setPrice(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <span style={{ display: \"flex\" }}>\n                    <label>In Stock</label>\n                    <input\n                        type=\"checkbox\"\n                        defaultChecked={product.stock}\n                        className=\"ml-2 mt-2\"\n                        onChange={() => setStock(!stock)}\n                    />\n                </span>\n\n                <Button\n                    type=\"submit\"\n                    variant='success'\n                    className=\"btn-sm button-focus-css mb-4\"\n                >\n                    Save Changes\n                </Button>\n                <Button\n                    onClick={() => history.push(`/product/${product.id}`)}\n                    variant='primary'\n                    className=\"btn-sm ml-2 button-focus-css mb-4\"\n                >\n                    Cancel\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default ProductUpdatePage\n","import React from 'react'\nimport Message from '../components/Message'\n\nfunction NotFoundPage() {\n    return (\n        <div>\n            <Message variant='danger'>\n                404 Not Found\n            </Message>\n        </div>\n    )\n}\n\nexport default NotFoundPage\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport ProductListPage from './pages/ProductsListPage'\nimport ProductDetailsPage from './pages/ProductDetailsPage'\nimport CheckoutPage from './pages/CheckoutPage'\nimport NavBar from './components/Navbar'\nimport PaymentStatus from './components/PaymentStatus'\nimport Login from './pages/LoginPage'\nimport Register from './pages/RegisterPage'\nimport CardUpdatePage from './pages/CardUpdatePage'\nimport CardDetailsPage from './pages/CardDetailsPage'\nimport AccountPage from './pages/AccountPage'\nimport AccountUpdatePage from './pages/AccountUpdatePage'\nimport DeleteUserAccountPage from './pages/DeleteUserAccountPage'\nimport AllAddressesOfUserPage from './pages/AllAddressesOfUserPage'\nimport AddressUpdatePage from './pages/AddressUpdatePage'\nimport OrdersListPage from './pages/OrdersListPage'\nimport ProductCreatePage from './pages/ProductCreatePage'\nimport ProductUpdatePage from './pages/ProductUpdatePage'\nimport NotFound from './pages/NotFoundPage'\n\nimport MessengerCustomerChat from 'react-messenger-customer-chat';\n\n\nconst App = () => {\n  const baseUrl=\"/Vite-app\"\n  return (\n    <div>\n      <Router>\n        <NavBar />\n        <div className=\"container mt-4\">\n          <Switch>\n            <Route path={`${baseUrl}/`} component={ProductListPage} exact />\n            <Route path={`${baseUrl}/new-product/`} component={ProductCreatePage} exact />\n            <Route path={`${baseUrl}/product/:id/`} component={ProductDetailsPage} exact />\n            <Route path=\"/product-update/:id/\" component={ProductUpdatePage} exact />\n            <Route path=\"/product/:id/checkout/\" component={CheckoutPage} exact />\n            <Route path=\"/payment-status\" component={PaymentStatus} exact />\n            <Route path=\"/login\" component={Login} exact />\n            <Route path=\"/register\" component={Register} exact />\n            <Route path=\"/account\" component={AccountPage} exact />\n            <Route path=\"/account/update/\" component={AccountUpdatePage} exact />\n            <Route path=\"/account/delete/\" component={DeleteUserAccountPage} exact />\n            <Route path=\"/stripe-card-details\" component={CardDetailsPage} exact />\n            <Route path=\"/stripe-card-update\" component={CardUpdatePage} exact />\n            <Route path=\"/all-addresses/\" component={AllAddressesOfUserPage} exact />\n            <Route path=\"/all-addresses/:id/\" component={AddressUpdatePage} exact />\n            <Route path=\"/all-orders/\" component={OrdersListPage} exact />\n            <Route path=\"/map/\" component={OrdersListPage} exact />\n            <Route path=\"\" component={NotFound} exact />\n          </Switch>\n        </div>\n      </Router>\n      <MessengerCustomerChat\n        pageId=\"110111535413312\"\n        appId=\"1411681669687745\"\n      />,\n    </div >\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport App from './App';\nimport \"./App.css\"\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}